{
	"id": "be5c94b7b23322fc62da4a8a6db99e53",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/KlineFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\r\nimport \"./KlineStorage.sol\";\r\n\r\ncontract KlineFactory {\r\n    address public immutable implementation;\r\n\r\n    mapping(address => address[]) public userContracts;\r\n    event ContractCreated(address indexed user, address contractAddress);\r\n\r\n    constructor(address _implementation) {\r\n        implementation = _implementation;\r\n    }\r\n\r\n    function createKlineStorage() external returns (address) {\r\n        address clone = Clones.clone(implementation);\r\n        KlineStorage(clone).initialize(msg.sender);\r\n        userContracts[msg.sender].push(clone);\r\n\r\n        emit ContractCreated(msg.sender, clone);\r\n        return clone;\r\n    }\r\n\r\n    function getUserContracts(address user) external view returns (address[] memory) {\r\n        return userContracts[user];\r\n    }\r\n}\r\n"
			},
			"contracts/KlineStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ncontract KlineStorage {\r\n    address public owner;\r\n\r\n    enum Interval {\r\n        MIN1, MIN5, MIN15, MIN30, HOUR1, HOUR4, HOUR12, DAY1\r\n    }\r\n\r\n    struct Candle {\r\n        uint256 openTime;\r\n        uint256 open;\r\n        uint256 high;\r\n        uint256 low;\r\n        uint256 close;\r\n        uint256 volume;\r\n        bool isClosed;\r\n    }\r\n\r\n    mapping(Interval => Candle[]) public candles;\r\n\r\n    bool public initialized;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not owner\");\r\n        _;\r\n    }\r\n\r\n    function initialize(address _owner) external {\r\n        require(!initialized, \"Already initialized\");\r\n        owner = _owner;\r\n        initialized = true;\r\n    }\r\n\r\n    function addCandle(Interval interval, Candle memory candle) external onlyOwner {\r\n        candles[interval].push(candle);\r\n    }\r\n\r\n    function getCandles(Interval interval) external view returns (Candle[] memory) {\r\n        return candles[interval];\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Create2} from \"../utils/Create2.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    error CloneArgumentsTooLong();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\n        return cloneWithImmutableArgs(implementation, args, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n     * parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        assembly (\"memory-safe\") {\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n     * at the same address.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal returns (address instance) {\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n     * but with a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.deploy(value, salt, bytecode);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\n    }\n\n    /**\n     * @dev Get the immutable args attached to a clone.\n     *\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n     *   function will return an empty array.\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n     *   creation.\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n     *   function should only be used to check addresses that are known to be clones.\n     */\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\n        assembly (\"memory-safe\") {\n            extcodecopy(instance, add(result, 32), 45, mload(result))\n        }\n        return result;\n    }\n\n    /**\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\n     *\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n     * abi.encodePacked is more expensive but also more portable and easier to review.\n     *\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\n     */\n    function _cloneCodeWithImmutableArgs(\n        address implementation,\n        bytes memory args\n    ) private pure returns (bytes memory) {\n        if (args.length > 24531) revert CloneArgumentsTooLong();\n        return\n            abi.encodePacked(\n                hex\"61\",\n                uint16(args.length + 45),\n                hex\"3d81600a3d39f3363d3d373d3d3d363d73\",\n                implementation,\n                hex\"5af43d82803e903d91602b57fd5bf3\",\n                args\n            );\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [
						{
							"inputs": [],
							"name": "CloneArgumentsTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":817:11840  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":817:11840  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201386aabf78ccdaac924a0e664a2db5f13d72bb2244c5f12d9163339d5869b86164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201386aabf78ccdaac924a0e664a2db5f13d72bb2244c5f12d9163339d5869b86164736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT DUP7 0xAA 0xBF PUSH25 0xCCDAAC924A0E664A2DB5F13D72BB2244C5F12D9163339D5869 0xB8 PUSH2 0x6473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "817:11023:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;817:11023:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201386aabf78ccdaac924a0e664a2db5f13d72bb2244c5f12d9163339d5869b86164736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT DUP7 0xAA 0xBF PUSH25 0xCCDAAC924A0E664A2DB5F13D72BB2244C5F12D9163339D5869 0xB8 PUSH2 0x6473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "817:11023:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_cloneCodeWithImmutableArgs(address,bytes memory)": "infinite",
								"clone(address)": "infinite",
								"clone(address,uint256)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"cloneDeterministic(address,bytes32,uint256)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"cloneDeterministicWithImmutableArgs(address,bytes memory,bytes32,uint256)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory)": "infinite",
								"cloneWithImmutableArgs(address,bytes memory,uint256)": "infinite",
								"fetchCloneArgs(address)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32)": "infinite",
								"predictDeterministicAddressWithImmutableArgs(address,bytes memory,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 817,
									"end": 11840,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201386aabf78ccdaac924a0e664a2db5f13d72bb2244c5f12d9163339d5869b86164736f6c634300081e0033",
									".code": [
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 11840,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/KlineFactory.sol",
								"contracts/KlineStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CloneArgumentsTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7162fa3c6971aa6f0a70160fed018edbb8b1db3af9b034ef3f7c224c3bdb7431\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f212d25e8f357209838ad7ce8ebc89de79906d9fe580566962e889ecb090e6b4\",\"dweb:/ipfs/QmdbLuLwX24VB1Gdrabke584WyaUkuJSWuDzzuRgqAMFge\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"Create2": {
					"abi": [
						{
							"inputs": [],
							"name": "Create2EmptyBytecode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
						"errors": {
							"Create2EmptyBytecode()": [
								{
									"details": "There's no code to deploy."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Create2.sol\":533:4465  library Create2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122082aa0ca8d1d16002f34d7bc4f45ead19b8ab54e28649f718308d437a5c8a6c1764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122082aa0ca8d1d16002f34d7bc4f45ead19b8ab54e28649f718308d437a5c8a6c1764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xAA 0xC 0xA8 DATALOADN 0xD160 MUL RETURN 0x4D PUSH28 0xC4F45EAD19B8AB54E28649F718308D437A5C8A6C1764736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;533:3932:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122082aa0ca8d1d16002f34d7bc4f45ead19b8ab54e28649f718308d437a5c8a6c1764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xAA 0xC 0xA8 DATALOADN 0xD160 MUL RETURN 0x4D PUSH28 0xC4F45EAD19B8AB54E28649F718308D437A5C8A6C1764736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "533:3932:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"computeAddress(bytes32,bytes32)": "infinite",
								"computeAddress(bytes32,bytes32,address)": "infinite",
								"deploy(uint256,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 4465,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122082aa0ca8d1d16002f34d7bc4f45ead19b8ab54e28649f718308d437a5c8a6c1764736f6c634300081e0033",
									".code": [
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 4465,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/KlineFactory.sol",
								"contracts/KlineStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E DUP4 0x2B 0xC7 CODESIZE SWAP12 SWAP12 PUSH2 0x6236 PUSH4 0xBF55EC6D REVERT JUMP 0xCB CREATE2 0xE8 MSTORE8 0x4C 0xDC PUSH12 0xEC8916C83A4E082D64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "411:484:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E DUP4 0x2B 0xC7 CODESIZE SWAP12 SWAP12 PUSH2 0x6236 PUSH4 0xBF55EC6D REVERT JUMP 0xCB CREATE2 0xE8 MSTORE8 0x4C 0xDC PUSH12 0xEC8916C83A4E082D64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "411:484:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e832bc7389b9b61623663bf55ec6dfd56cbf5e8534cdc6bec8916c83a4e082d64736f6c634300081e0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/KlineFactory.sol",
								"contracts/KlineStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/KlineFactory.sol": {
				"KlineFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "ContractCreated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "createKlineStorage",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserContracts",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userContracts",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/KlineFactory.sol\":145:885  contract KlineFactory {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/KlineFactory.sol\":356:444  constructor(address _implementation) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/KlineFactory.sol\":404:436  implementation = _implementation */\n  and\n  0x80\n  mstore\n    /* \"contracts/KlineFactory.sol\":145:885  contract KlineFactory {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  0x00\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  0x00\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_10:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/KlineFactory.sol\":145:885  contract KlineFactory {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x23191c4af8dc2a4aa44ffc7c4c9e4691c315520583859b69168aa9d748d0fff0\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/KlineFactory.sol\":145:885  contract KlineFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x34c925f0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb789003d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xdb6d66c0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/KlineFactory.sol\":756:882  function getUserContracts(address user) external view returns (address[] memory) {... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KlineFactory.sol\":174:213  address public immutable implementation */\n    tag_4:\n      tag_13\n      immutable(\"0x23191c4af8dc2a4aa44ffc7c4c9e4691c315520583859b69168aa9d748d0fff0\")\n      dup2\n      jump\n    tag_13:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1189:1221   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1171:1222   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1159:1161   */\n      0x20\n        /* \"#utility.yul\":1144:1162   */\n      add\n        /* \"contracts/KlineFactory.sol\":174:213  address public immutable implementation */\n      tag_11\n        /* \"#utility.yul\":1025:1228   */\n      jump\n        /* \"contracts/KlineFactory.sol\":222:272  mapping(address => address[]) public userContracts */\n    tag_5:\n      tag_13\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"contracts/KlineFactory.sol\":452:748  function createKlineStorage() external returns (address) {... */\n    tag_6:\n      tag_13\n      tag_23\n      jump\t// in\n        /* \"contracts/KlineFactory.sol\":756:882  function getUserContracts(address user) external view returns (address[] memory) {... */\n    tag_10:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KlineFactory.sol\":855:874  userContracts[user] */\n      dup2\n      and\n        /* \"contracts/KlineFactory.sol\":855:868  userContracts */\n      0x00\n        /* \"contracts/KlineFactory.sol\":855:874  userContracts[user] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/KlineFactory.sol\":848:874  return userContracts[user] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"contracts/KlineFactory.sol\":819:835  address[] memory */\n      0x60\n      swap4\n        /* \"contracts/KlineFactory.sol\":848:874  return userContracts[user] */\n      swap3\n      dup4\n      add\n        /* \"contracts/KlineFactory.sol\":855:874  userContracts[user] */\n      dup3\n        /* \"contracts/KlineFactory.sol\":848:874  return userContracts[user] */\n      dup3\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_27:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_27\n      jumpi\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/KlineFactory.sol\":756:882  function getUserContracts(address user) external view returns (address[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KlineFactory.sol\":222:272  mapping(address => address[]) public userContracts */\n    tag_20:\n      mstore(0x20, 0x00)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n      dup3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KlineFactory.sol\":452:748  function createKlineStorage() external returns (address) {... */\n    tag_23:\n        /* \"contracts/KlineFactory.sol\":500:507  address */\n      0x00\n        /* \"contracts/KlineFactory.sol\":520:533  address clone */\n      0x00\n        /* \"contracts/KlineFactory.sol\":536:564  Clones.clone(implementation) */\n      tag_31\n        /* \"contracts/KlineFactory.sol\":549:563  implementation */\n      immutable(\"0x23191c4af8dc2a4aa44ffc7c4c9e4691c315520583859b69168aa9d748d0fff0\")\n        /* \"contracts/KlineFactory.sol\":536:548  Clones.clone */\n      tag_32\n        /* \"contracts/KlineFactory.sol\":536:564  Clones.clone(implementation) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/KlineFactory.sol\":575:617  KlineStorage(clone).initialize(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x189acdbd)\n      dup2\n      mstore\n        /* \"contracts/KlineFactory.sol\":606:616  msg.sender */\n      caller\n        /* \"contracts/KlineFactory.sol\":575:617  KlineStorage(clone).initialize(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1171:1222   */\n      mstore\n        /* \"contracts/KlineFactory.sol\":520:564  address clone = Clones.clone(implementation) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/KlineFactory.sol\":575:605  KlineStorage(clone).initialize */\n      dup3\n      and\n      swap1\n      0xc4d66de8\n      swap1\n        /* \"#utility.yul\":1144:1162   */\n      0x24\n      add\n        /* \"contracts/KlineFactory.sol\":575:617  KlineStorage(clone).initialize(msg.sender) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      revert(0x00, 0x00)\n    tag_34:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n        /* \"contracts/KlineFactory.sol\":642:652  msg.sender */\n      caller\n        /* \"contracts/KlineFactory.sol\":628:641  userContracts */\n      0x00\n        /* \"contracts/KlineFactory.sol\":628:653  userContracts[msg.sender] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/KlineFactory.sol\":628:665  userContracts[msg.sender].push(clone) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup5\n      mstore\n      swap3\n      dup3\n      swap1\n      keccak256\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/KlineFactory.sol\":683:717  ContractCreated(msg.sender, clone) */\n      swap2\n      mload\n        /* \"#utility.yul\":1171:1222   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/KlineFactory.sol\":642:652  msg.sender */\n      swap2\n      swap4\n      pop\n        /* \"contracts/KlineFactory.sol\":683:717  ContractCreated(msg.sender, clone) */\n      0x2d49c67975aadd2d389580b368cfff5b49965b0bd5da33c144922ce01e7a4d7b\n      swap3\n      pop\n        /* \"#utility.yul\":1144:1162   */\n      add\n        /* \"contracts/KlineFactory.sol\":683:717  ContractCreated(msg.sender, clone) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/KlineFactory.sol\":735:740  clone */\n      swap2\n        /* \"contracts/KlineFactory.sol\":452:748  function createKlineStorage() external returns (address) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1070:1193  function clone(address implementation) internal returns (address instance) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1127:1143  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1162:1186  clone(implementation, 0) */\n      tag_40\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1168:1182  implementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1184:1185  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1162:1167  clone */\n      tag_41\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1162:1186  clone(implementation, 0) */\n      jump\t// in\n    tag_40:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1155:1186  return clone(implementation, 0) */\n      swap3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1070:1193  function clone(address implementation) internal returns (address instance) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1585:2495  function clone(address implementation, uint256 value) internal returns (address instance) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1657:1673  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1713:1718  value */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1689:1710  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1689:1718  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1685:1808  if (address(this).balance < value) {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1741:1797  Errors.InsufficientBalance(address(this).balance, value) */\n      mload(0x40)\n      shl(0xe0, 0xcf479181)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1768:1789  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1741:1797  Errors.InsufficientBalance(address(this).balance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1666:1691   */\n      mstore\n        /* \"#utility.yul\":1707:1725   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":1700:1734   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":1639:1657   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1741:1797  Errors.InsufficientBalance(address(this).balance, value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":1685:1808  if (address(this).balance < value) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2094:2142  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2076:2090  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2070:2074  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2066:2091  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2060:2064  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2056:2092  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2053:2143  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2047:2051  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2040:2144  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2301:2333  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2284:2298  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2278:2282  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2274:2299  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2271:2334  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2265:2269  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2258:2335  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2380:2384  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2374:2378  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2367:2372  value */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2360:2385  create(value, 0x09, 0x37) */\n      create\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2348:2385  instance := create(value, 0x09, 0x37) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2408:2430  instance == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2404:2489  if (instance == address(0)) {... */\n      tag_40\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2453:2478  Errors.FailedDeployment() */\n      mload(0x40)\n      shl(0xe0, 0xb06ebf3d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:187   */\n    tag_47:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      0x00\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_50:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_9:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_52:\n        /* \"#utility.yul\":343:372   */\n      tag_53\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_47\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:1020   */\n    tag_12:\n        /* \"#utility.yul\":573:575   */\n      0x20\n        /* \"#utility.yul\":585:606   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":655:668   */\n      dup3\n      mload\n        /* \"#utility.yul\":558:576   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":677:699   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":525:529   */\n      0x00\n      swap2\n        /* \"#utility.yul\":756:771   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":730:732   */\n      0x40\n        /* \"#utility.yul\":715:733   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":525:529   */\n      dup4\n        /* \"#utility.yul\":799:994   */\n    tag_55:\n        /* \"#utility.yul\":813:819   */\n      dup2\n        /* \"#utility.yul\":810:811   */\n      dup2\n        /* \"#utility.yul\":807:820   */\n      lt\n        /* \"#utility.yul\":799:994   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":878:891   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":874:913   */\n      and\n        /* \"#utility.yul\":862:914   */\n      dup4\n      mstore\n        /* \"#utility.yul\":943:945   */\n      0x20\n        /* \"#utility.yul\":969:984   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":934:946   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":910:911   */\n      0x01\n        /* \"#utility.yul\":828:837   */\n      add\n        /* \"#utility.yul\":799:994   */\n      jump(tag_55)\n    tag_57:\n      pop\n        /* \"#utility.yul\":1011:1014   */\n      swap1\n      swap6\n        /* \"#utility.yul\":383:1020   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1233:1487   */\n    tag_19:\n        /* \"#utility.yul\":1301:1307   */\n      0x00\n        /* \"#utility.yul\":1309:1315   */\n      0x00\n        /* \"#utility.yul\":1362:1364   */\n      0x40\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1341:1348   */\n      dup6\n        /* \"#utility.yul\":1337:1360   */\n      sub\n        /* \"#utility.yul\":1333:1365   */\n      slt\n        /* \"#utility.yul\":1330:1382   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1378:1379   */\n      0x00\n        /* \"#utility.yul\":1375:1376   */\n      0x00\n        /* \"#utility.yul\":1368:1380   */\n      revert\n        /* \"#utility.yul\":1330:1382   */\n    tag_60:\n        /* \"#utility.yul\":1401:1430   */\n      tag_61\n        /* \"#utility.yul\":1420:1429   */\n      dup4\n        /* \"#utility.yul\":1401:1430   */\n      tag_47\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1391:1430   */\n      swap5\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1449:1481   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1233:1487   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a7dd5c50cbd2420029f38e7b29ab95f42b13180cc60d54904ebffcc8a32726b664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_546": {
									"entryPoint": null,
									"id": 546,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 59,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:306:5",
										"nodeType": "YulBlock",
										"src": "0:306:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:5",
													"nodeType": "YulBlock",
													"src": "95:209:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:5",
																"nodeType": "YulBlock",
																"src": "141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:5",
																					"nodeType": "YulLiteral",
																					"src": "150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:5",
																					"nodeType": "YulLiteral",
																					"src": "153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:5"
																			},
																			"nativeSrc": "143:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:5"
																		},
																		"nativeSrc": "143:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:5"
																		},
																		"nativeSrc": "112:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:5",
																		"nodeType": "YulLiteral",
																		"src": "137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:5"
																},
																"nativeSrc": "108:32:5",
																"nodeType": "YulFunctionCall",
																"src": "108:32:5"
															},
															"nativeSrc": "105:52:5",
															"nodeType": "YulIf",
															"src": "105:52:5"
														},
														{
															"nativeSrc": "166:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:5"
																},
																"nativeSrc": "179:16:5",
																"nodeType": "YulFunctionCall",
																"src": "179:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:5",
																	"nodeType": "YulTypedName",
																	"src": "170:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:5",
																"nodeType": "YulBlock",
																"src": "258:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:5",
																					"nodeType": "YulLiteral",
																					"src": "267:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:5",
																					"nodeType": "YulLiteral",
																					"src": "270:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:5"
																			},
																			"nativeSrc": "260:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:5"
																		},
																		"nativeSrc": "260:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:5",
																										"nodeType": "YulLiteral",
																										"src": "243:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:5",
																										"nodeType": "YulLiteral",
																										"src": "248:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:5"
																								},
																								"nativeSrc": "239:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:5",
																								"nodeType": "YulLiteral",
																								"src": "252:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:5"
																						},
																						"nativeSrc": "235:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:5"
																				},
																				"nativeSrc": "224:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:5"
																		},
																		"nativeSrc": "214:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:5"
																},
																"nativeSrc": "207:50:5",
																"nodeType": "YulFunctionCall",
																"src": "207:50:5"
															},
															"nativeSrc": "204:70:5",
															"nodeType": "YulIf",
															"src": "204:70:5"
														},
														{
															"nativeSrc": "283:15:5",
															"nodeType": "YulAssignment",
															"src": "283:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:5",
																"nodeType": "YulIdentifier",
																"src": "293:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:5",
														"nodeType": "YulTypedName",
														"src": "61:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:5",
														"nodeType": "YulTypedName",
														"src": "72:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:5",
														"nodeType": "YulTypedName",
														"src": "84:6:5",
														"type": ""
													}
												],
												"src": "14:290:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052348015600e575f5ffd5b5060405161047c38038061047c833981016040819052602b91603b565b6001600160a01b03166080526066565b5f60208284031215604a575f5ffd5b81516001600160a01b0381168114605f575f5ffd5b9392505050565b6080516103f86100845f395f8181607c015261017c01526103f85ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c806334c925f01461004e5780635c60da1b14610077578063b789003d146100b6578063db6d66c0146100c9575b5f5ffd5b61006161005c36600461032f565b6100d1565b60405161006e919061034f565b60405180910390f35b61009e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161006e565b61009e6100c436600461039a565b610142565b61009e610175565b6001600160a01b0381165f908152602081815260409182902080548351818402810184019094528084526060939283018282801561013657602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610118575b50505050509050919050565b5f602052815f5260405f20818154811061015a575f80fd5b5f918252602090912001546001600160a01b03169150829050565b5f5f6101a07f000000000000000000000000000000000000000000000000000000000000000061026b565b60405163189acdbd60e31b81523360048201529091506001600160a01b0382169063c4d66de8906024015f604051808303815f87803b1580156101e1575f5ffd5b505af11580156101f3573d5f5f3e3d5ffd5b5050335f8181526020818152604080832080546001810182559084529282902090920180546001600160a01b0319166001600160a01b03881690811790915591519182529193507f2d49c67975aadd2d389580b368cfff5b49965b0bd5da33c144922ce01e7a4d7b92500160405180910390a2919050565b5f610276825f61027c565b92915050565b5f814710156102ab5760405163cf47918160e01b81524760048201526024810183905260440160405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090506001600160a01b0381166102765760405163b06ebf3d60e01b815260040160405180910390fd5b80356001600160a01b038116811461032a575f5ffd5b919050565b5f6020828403121561033f575f5ffd5b61034882610314565b9392505050565b602080825282518282018190525f918401906040840190835b8181101561038f5783516001600160a01b0316835260209384019390920191600101610368565b509095945050505050565b5f5f604083850312156103ab575f5ffd5b6103b483610314565b94602093909301359350505056fea2646970667358221220a7dd5c50cbd2420029f38e7b29ab95f42b13180cc60d54904ebffcc8a32726b664736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x47C CODESIZE SUB DUP1 PUSH2 0x47C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2B SWAP2 PUSH1 0x3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x66 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x4A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x5F JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3F8 PUSH2 0x84 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0x7C ADD MSTORE PUSH2 0x17C ADD MSTORE PUSH2 0x3F8 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34C925F0 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xB789003D EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDB6D66C0 EQ PUSH2 0xC9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6E JUMP JUMPDEST PUSH2 0x9E PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST PUSH2 0x9E PUSH2 0x175 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x118 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x15A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1A0 PUSH32 0x0 PUSH2 0x26B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x189ACDBD PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xC4D66DE8 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE SWAP3 DUP3 SWAP1 KECCAK256 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP2 SWAP4 POP PUSH32 0x2D49C67975AADD2D389580B368CFFF5B49965B0BD5DA33C144922CE01E7A4D7B SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x276 DUP3 PUSH0 PUSH2 0x27C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x2AB JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x276 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06EBF3D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x32A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x348 DUP3 PUSH2 0x314 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38F JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x368 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x3B4 DUP4 PUSH2 0x314 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xDD TLOAD POP 0xCB 0xD2 TIMESTAMP STOP 0x29 RETURN DUP15 PUSH28 0x29AB95F42B13180CC60D54904EBFFCC8A32726B664736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "145:740:3:-:0;;;356:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;404:32:3;;;145:740;;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;145:740:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@clone_22": {
									"entryPoint": 619,
									"id": 22,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@clone_67": {
									"entryPoint": 636,
									"id": 67,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createKlineStorage_583": {
									"entryPoint": 373,
									"id": 583,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserContracts_596": {
									"entryPoint": 209,
									"id": 596,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@implementation_525": {
									"entryPoint": null,
									"id": 525,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userContracts_530": {
									"entryPoint": 322,
									"id": 530,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1742:5",
										"nodeType": "YulBlock",
										"src": "0:1742:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:5",
													"nodeType": "YulBlock",
													"src": "63:124:5",
													"statements": [
														{
															"nativeSrc": "73:29:5",
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nativeSrc": "82:20:5",
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:5",
																"nodeType": "YulBlock",
																"src": "165:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:5",
																					"nodeType": "YulLiteral",
																					"src": "174:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:5",
																					"nodeType": "YulLiteral",
																					"src": "177:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:5"
																			},
																			"nativeSrc": "167:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:5"
																		},
																		"nativeSrc": "167:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:5",
																										"nodeType": "YulLiteral",
																										"src": "150:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:5",
																										"nodeType": "YulLiteral",
																										"src": "155:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:5"
																								},
																								"nativeSrc": "146:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:5",
																								"nodeType": "YulLiteral",
																								"src": "159:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:5"
																						},
																						"nativeSrc": "142:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nativeSrc": "131:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nativeSrc": "121:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nativeSrc": "114:50:5",
																"nodeType": "YulFunctionCall",
																"src": "114:50:5"
															},
															"nativeSrc": "111:70:5",
															"nodeType": "YulIf",
															"src": "111:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:5",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:5",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:173:5"
											},
											{
												"body": {
													"nativeSrc": "262:116:5",
													"nodeType": "YulBlock",
													"src": "262:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:5",
																"nodeType": "YulBlock",
																"src": "308:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:5",
																					"nodeType": "YulLiteral",
																					"src": "317:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:5",
																					"nodeType": "YulLiteral",
																					"src": "320:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:5"
																			},
																			"nativeSrc": "310:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:5"
																		},
																		"nativeSrc": "310:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:5"
																		},
																		"nativeSrc": "279:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:5",
																		"nodeType": "YulLiteral",
																		"src": "304:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:5"
																},
																"nativeSrc": "275:32:5",
																"nodeType": "YulFunctionCall",
																"src": "275:32:5"
															},
															"nativeSrc": "272:52:5",
															"nodeType": "YulIf",
															"src": "272:52:5"
														},
														{
															"nativeSrc": "333:39:5",
															"nodeType": "YulAssignment",
															"src": "333:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:5"
																},
																"nativeSrc": "343:29:5",
																"nodeType": "YulFunctionCall",
																"src": "343:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:5",
														"nodeType": "YulTypedName",
														"src": "228:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:5",
														"nodeType": "YulTypedName",
														"src": "239:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:5",
														"nodeType": "YulTypedName",
														"src": "251:6:5",
														"type": ""
													}
												],
												"src": "192:186:5"
											},
											{
												"body": {
													"nativeSrc": "534:486:5",
													"nodeType": "YulBlock",
													"src": "534:486:5",
													"statements": [
														{
															"nativeSrc": "544:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "544:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "562:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "562:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:2:5",
																		"nodeType": "YulLiteral",
																		"src": "573:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "558:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "558:3:5"
																},
																"nativeSrc": "558:18:5",
																"nodeType": "YulFunctionCall",
																"src": "558:18:5"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "548:6:5",
																	"nodeType": "YulTypedName",
																	"src": "548:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "592:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "592:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "603:2:5",
																		"nodeType": "YulLiteral",
																		"src": "603:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "585:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:5"
																},
																"nativeSrc": "585:21:5",
																"nodeType": "YulFunctionCall",
																"src": "585:21:5"
															},
															"nativeSrc": "585:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "585:21:5"
														},
														{
															"nativeSrc": "615:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "615:17:5",
															"value": {
																"name": "tail_1",
																"nativeSrc": "626:6:5",
																"nodeType": "YulIdentifier",
																"src": "626:6:5"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "619:3:5",
																	"nodeType": "YulTypedName",
																	"src": "619:3:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "641:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "641:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "661:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "661:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "655:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "655:5:5"
																},
																"nativeSrc": "655:13:5",
																"nodeType": "YulFunctionCall",
																"src": "655:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "645:6:5",
																	"nodeType": "YulTypedName",
																	"src": "645:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "684:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "684:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "692:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "692:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "677:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "677:6:5"
																},
																"nativeSrc": "677:22:5",
																"nodeType": "YulFunctionCall",
																"src": "677:22:5"
															},
															"nativeSrc": "677:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "677:22:5"
														},
														{
															"nativeSrc": "708:25:5",
															"nodeType": "YulAssignment",
															"src": "708:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "719:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "719:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "730:2:5",
																		"nodeType": "YulLiteral",
																		"src": "730:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "715:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:5"
																},
																"nativeSrc": "715:18:5",
																"nodeType": "YulFunctionCall",
																"src": "715:18:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "708:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "708:3:5"
																}
															]
														},
														{
															"nativeSrc": "742:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "742:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "760:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "760:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "768:2:5",
																		"nodeType": "YulLiteral",
																		"src": "768:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "756:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:5"
																},
																"nativeSrc": "756:15:5",
																"nodeType": "YulFunctionCall",
																"src": "756:15:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "746:6:5",
																	"nodeType": "YulTypedName",
																	"src": "746:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "780:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "780:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "789:1:5",
																"nodeType": "YulLiteral",
																"src": "789:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "784:1:5",
																	"nodeType": "YulTypedName",
																	"src": "784:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "848:146:5",
																"nodeType": "YulBlock",
																"src": "848:146:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "869:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "884:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "884:6:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "878:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "878:5:5"
																							},
																							"nativeSrc": "878:13:5",
																							"nodeType": "YulFunctionCall",
																							"src": "878:13:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "901:3:5",
																											"nodeType": "YulLiteral",
																											"src": "901:3:5",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "906:1:5",
																											"nodeType": "YulLiteral",
																											"src": "906:1:5",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "897:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "897:3:5"
																									},
																									"nativeSrc": "897:11:5",
																									"nodeType": "YulFunctionCall",
																									"src": "897:11:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "910:1:5",
																									"nodeType": "YulLiteral",
																									"src": "910:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "893:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:5"
																							},
																							"nativeSrc": "893:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "874:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "874:3:5"
																					},
																					"nativeSrc": "874:39:5",
																					"nodeType": "YulFunctionCall",
																					"src": "874:39:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "862:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "862:6:5"
																			},
																			"nativeSrc": "862:52:5",
																			"nodeType": "YulFunctionCall",
																			"src": "862:52:5"
																		},
																		"nativeSrc": "862:52:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "862:52:5"
																	},
																	{
																		"nativeSrc": "927:19:5",
																		"nodeType": "YulAssignment",
																		"src": "927:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "938:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "938:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "943:2:5",
																					"nodeType": "YulLiteral",
																					"src": "943:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "934:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "934:3:5"
																			},
																			"nativeSrc": "934:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "934:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "927:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "927:3:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "959:25:5",
																		"nodeType": "YulAssignment",
																		"src": "959:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "973:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "973:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "981:2:5",
																					"nodeType": "YulLiteral",
																					"src": "981:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "969:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "969:3:5"
																			},
																			"nativeSrc": "969:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "969:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "959:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "810:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "810:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "813:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "813:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "807:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "807:2:5"
																},
																"nativeSrc": "807:13:5",
																"nodeType": "YulFunctionCall",
																"src": "807:13:5"
															},
															"nativeSrc": "799:195:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "821:18:5",
																"nodeType": "YulBlock",
																"src": "821:18:5",
																"statements": [
																	{
																		"nativeSrc": "823:14:5",
																		"nodeType": "YulAssignment",
																		"src": "823:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "832:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "832:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "835:1:5",
																					"nodeType": "YulLiteral",
																					"src": "835:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "828:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "828:3:5"
																			},
																			"nativeSrc": "828:9:5",
																			"nodeType": "YulFunctionCall",
																			"src": "828:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "823:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "823:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "803:3:5",
																"nodeType": "YulBlock",
																"src": "803:3:5",
																"statements": []
															},
															"src": "799:195:5"
														},
														{
															"nativeSrc": "1003:11:5",
															"nodeType": "YulAssignment",
															"src": "1003:11:5",
															"value": {
																"name": "pos",
																"nativeSrc": "1011:3:5",
																"nodeType": "YulIdentifier",
																"src": "1011:3:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1003:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1003:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "383:637:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "503:9:5",
														"nodeType": "YulTypedName",
														"src": "503:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "514:6:5",
														"nodeType": "YulTypedName",
														"src": "514:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "525:4:5",
														"nodeType": "YulTypedName",
														"src": "525:4:5",
														"type": ""
													}
												],
												"src": "383:637:5"
											},
											{
												"body": {
													"nativeSrc": "1126:102:5",
													"nodeType": "YulBlock",
													"src": "1126:102:5",
													"statements": [
														{
															"nativeSrc": "1136:26:5",
															"nodeType": "YulAssignment",
															"src": "1136:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1148:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1148:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1159:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1159:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1144:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1144:3:5"
																},
																"nativeSrc": "1144:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1144:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1136:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1136:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1178:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1178:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1193:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1193:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1209:3:5",
																								"nodeType": "YulLiteral",
																								"src": "1209:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1214:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1214:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1205:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1205:3:5"
																						},
																						"nativeSrc": "1205:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1205:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1218:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1218:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1201:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1201:3:5"
																				},
																				"nativeSrc": "1201:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1201:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1189:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1189:3:5"
																		},
																		"nativeSrc": "1189:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1189:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1171:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:5"
																},
																"nativeSrc": "1171:51:5",
																"nodeType": "YulFunctionCall",
																"src": "1171:51:5"
															},
															"nativeSrc": "1171:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "1171:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1025:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1095:9:5",
														"nodeType": "YulTypedName",
														"src": "1095:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1106:6:5",
														"nodeType": "YulTypedName",
														"src": "1106:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1117:4:5",
														"nodeType": "YulTypedName",
														"src": "1117:4:5",
														"type": ""
													}
												],
												"src": "1025:203:5"
											},
											{
												"body": {
													"nativeSrc": "1320:167:5",
													"nodeType": "YulBlock",
													"src": "1320:167:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1366:16:5",
																"nodeType": "YulBlock",
																"src": "1366:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1375:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1375:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1378:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1378:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1368:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1368:6:5"
																			},
																			"nativeSrc": "1368:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1368:12:5"
																		},
																		"nativeSrc": "1368:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1368:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1341:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1341:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1337:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1337:3:5"
																		},
																		"nativeSrc": "1337:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1337:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1362:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1362:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1333:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1333:3:5"
																},
																"nativeSrc": "1333:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1333:32:5"
															},
															"nativeSrc": "1330:52:5",
															"nodeType": "YulIf",
															"src": "1330:52:5"
														},
														{
															"nativeSrc": "1391:39:5",
															"nodeType": "YulAssignment",
															"src": "1391:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1420:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1401:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1401:18:5"
																},
																"nativeSrc": "1401:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1401:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1391:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:5"
																}
															]
														},
														{
															"nativeSrc": "1439:42:5",
															"nodeType": "YulAssignment",
															"src": "1439:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1466:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1466:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1477:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1477:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1462:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1462:3:5"
																		},
																		"nativeSrc": "1462:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1462:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1449:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1449:12:5"
																},
																"nativeSrc": "1449:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1449:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1439:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1439:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1233:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1278:9:5",
														"nodeType": "YulTypedName",
														"src": "1278:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1289:7:5",
														"nodeType": "YulTypedName",
														"src": "1289:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1301:6:5",
														"nodeType": "YulTypedName",
														"src": "1301:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1309:6:5",
														"nodeType": "YulTypedName",
														"src": "1309:6:5",
														"type": ""
													}
												],
												"src": "1233:254:5"
											},
											{
												"body": {
													"nativeSrc": "1621:119:5",
													"nodeType": "YulBlock",
													"src": "1621:119:5",
													"statements": [
														{
															"nativeSrc": "1631:26:5",
															"nodeType": "YulAssignment",
															"src": "1631:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1643:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1643:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1654:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1654:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1639:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1639:3:5"
																},
																"nativeSrc": "1639:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1639:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1631:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1631:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1673:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1673:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1684:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1684:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:5"
																},
																"nativeSrc": "1666:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1666:25:5"
															},
															"nativeSrc": "1666:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1666:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1711:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1711:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1722:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1722:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1707:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1707:3:5"
																		},
																		"nativeSrc": "1707:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1707:18:5"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1727:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1727:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1700:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:5"
																},
																"nativeSrc": "1700:34:5",
																"nodeType": "YulFunctionCall",
																"src": "1700:34:5"
															},
															"nativeSrc": "1700:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "1700:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1492:248:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1582:9:5",
														"nodeType": "YulTypedName",
														"src": "1582:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1593:6:5",
														"nodeType": "YulTypedName",
														"src": "1593:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1601:6:5",
														"nodeType": "YulTypedName",
														"src": "1601:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1612:4:5",
														"nodeType": "YulTypedName",
														"src": "1612:4:5",
														"type": ""
													}
												],
												"src": "1492:248:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"525": [
									{
										"length": 32,
										"start": 124
									},
									{
										"length": 32,
										"start": 380
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061004a575f3560e01c806334c925f01461004e5780635c60da1b14610077578063b789003d146100b6578063db6d66c0146100c9575b5f5ffd5b61006161005c36600461032f565b6100d1565b60405161006e919061034f565b60405180910390f35b61009e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161006e565b61009e6100c436600461039a565b610142565b61009e610175565b6001600160a01b0381165f908152602081815260409182902080548351818402810184019094528084526060939283018282801561013657602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610118575b50505050509050919050565b5f602052815f5260405f20818154811061015a575f80fd5b5f918252602090912001546001600160a01b03169150829050565b5f5f6101a07f000000000000000000000000000000000000000000000000000000000000000061026b565b60405163189acdbd60e31b81523360048201529091506001600160a01b0382169063c4d66de8906024015f604051808303815f87803b1580156101e1575f5ffd5b505af11580156101f3573d5f5f3e3d5ffd5b5050335f8181526020818152604080832080546001810182559084529282902090920180546001600160a01b0319166001600160a01b03881690811790915591519182529193507f2d49c67975aadd2d389580b368cfff5b49965b0bd5da33c144922ce01e7a4d7b92500160405180910390a2919050565b5f610276825f61027c565b92915050565b5f814710156102ab5760405163cf47918160e01b81524760048201526024810183905260440160405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f090506001600160a01b0381166102765760405163b06ebf3d60e01b815260040160405180910390fd5b80356001600160a01b038116811461032a575f5ffd5b919050565b5f6020828403121561033f575f5ffd5b61034882610314565b9392505050565b602080825282518282018190525f918401906040840190835b8181101561038f5783516001600160a01b0316835260209384019390920191600101610368565b509095945050505050565b5f5f604083850312156103ab575f5ffd5b6103b483610314565b94602093909301359350505056fea2646970667358221220a7dd5c50cbd2420029f38e7b29ab95f42b13180cc60d54904ebffcc8a32726b664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34C925F0 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0xB789003D EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDB6D66C0 EQ PUSH2 0xC9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6E JUMP JUMPDEST PUSH2 0x9E PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST PUSH2 0x9E PUSH2 0x175 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x136 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x118 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x15A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1A0 PUSH32 0x0 PUSH2 0x26B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x189ACDBD PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xC4D66DE8 SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE SWAP3 DUP3 SWAP1 KECCAK256 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE SWAP2 SWAP4 POP PUSH32 0x2D49C67975AADD2D389580B368CFFF5B49965B0BD5DA33C144922CE01E7A4D7B SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x276 DUP3 PUSH0 PUSH2 0x27C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x2AB JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x276 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB06EBF3D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x32A JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33F JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x348 DUP3 PUSH2 0x314 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38F JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x368 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x3B4 DUP4 PUSH2 0x314 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xDD TLOAD POP 0xCB 0xD2 TIMESTAMP STOP 0x29 RETURN DUP15 PUSH28 0x29AB95F42B13180CC60D54904EBFFCC8A32726B664736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "145:740:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;756:126;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;174:39;;;;;;;;-1:-1:-1;;;;;1189:32:5;;;1171:51;;1159:2;1144:18;174:39:3;1025:203:5;222:50:3;;;;;;:::i;:::-;;:::i;452:296::-;;;:::i;756:126::-;-1:-1:-1;;;;;855:19:3;;:13;:19;;;;;;;;;;;;848:26;;;;;;;;;;;;;;;;;819:16;;848:26;;;855:19;848:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;848:26:3;;;;;;;;;;;;;;;;;;;;;;;756:126;;;:::o;222:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;222:50:3;;-1:-1:-1;222:50:3;;-1:-1:-1;222:50:3:o;452:296::-;500:7;520:13;536:28;549:14;536:12;:28::i;:::-;575:42;;-1:-1:-1;;;575:42:3;;606:10;575:42;;;1171:51:5;520:44:3;;-1:-1:-1;;;;;;575:30:3;;;;;1144:18:5;;575:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;642:10:3;628:13;:25;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;628:37:3;-1:-1:-1;;;;;628:37:3;;;;;;;;683:34;;1171:51:5;;;642:10:3;;-1:-1:-1;683:34:3;;-1:-1:-1;1144:18:5;683:34:3;;;;;;;735:5;452:296;-1:-1:-1;452:296:3:o;1070:123:0:-;1127:16;1162:24;1168:14;1184:1;1162:5;:24::i;:::-;1155:31;1070:123;-1:-1:-1;;1070:123:0:o;1585:910::-;1657:16;1713:5;1689:21;:29;1685:123;;;1741:56;;-1:-1:-1;;;1741:56:0;;1768:21;1741:56;;;1666:25:5;1707:18;;;1700:34;;;1639:18;;1741:56:0;;;;;;;1685:123;2094:48;2076:14;2070:4;2066:25;2060:4;2056:36;2053:90;2047:4;2040:104;2301:32;2284:14;2278:4;2274:25;2271:63;2265:4;2258:77;2380:4;2374;2367:5;2360:25;2348:37;-1:-1:-1;;;;;;2408:22:0;;2404:85;;2453:25;;-1:-1:-1;;;2453:25:0;;;;;;;;;;;14:173:5;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:5:o;383:637::-;573:2;585:21;;;655:13;;558:18;;;677:22;;;525:4;;756:15;;;730:2;715:18;;;525:4;799:195;813:6;810:1;807:13;799:195;;;878:13;;-1:-1:-1;;;;;874:39:5;862:52;;943:2;969:15;;;;934:12;;;;910:1;828:9;799:195;;;-1:-1:-1;1011:3:5;;383:637;-1:-1:-1;;;;;383:637:5:o;1233:254::-;1301:6;1309;1362:2;1350:9;1341:7;1337:23;1333:32;1330:52;;;1378:1;1375;1368:12;1330:52;1401:29;1420:9;1401:29;:::i;:::-;1391:39;1477:2;1462:18;;;;1449:32;;-1:-1:-1;;;1233:254:5:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "203200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"createKlineStorage()": "infinite",
								"getUserContracts(address)": "infinite",
								"implementation()": "infinite",
								"userContracts(address,uint256)": "4799"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 145,
									"end": 885,
									"name": "PUSH",
									"source": 3,
									"value": "A0"
								},
								{
									"begin": 145,
									"end": 885,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 145,
									"end": 885,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 356,
									"end": 444,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 356,
									"end": 444,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 356,
									"end": 444,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 356,
									"end": 444,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 356,
									"end": 444,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 356,
									"end": 444,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 356,
									"end": 444,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 356,
									"end": 444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 356,
									"end": 444,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 356,
									"end": 444,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 404,
									"end": 436,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 404,
									"end": 436,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 404,
									"end": 436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 145,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 145,
									"end": 885,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 145,
									"end": 885,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 145,
									"end": 885,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 145,
									"end": 885,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 885,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 885,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 885,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 145,
									"end": 885,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 885,
									"name": "ASSIGNIMMUTABLE",
									"source": 3,
									"value": "525"
								},
								{
									"begin": 145,
									"end": 885,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 885,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 885,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a7dd5c50cbd2420029f38e7b29ab95f42b13180cc60d54904ebffcc8a32726b664736f6c634300081e0033",
									".code": [
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "34C925F0"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "5C60DA1B"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "B789003D"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "DB6D66C0"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 885,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 756,
											"end": 882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 756,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 756,
											"end": 882,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 756,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 756,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 756,
											"end": 882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 756,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 756,
											"end": 882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 756,
											"end": 882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 756,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 756,
											"end": 882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 174,
											"end": 213,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 213,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "525"
										},
										{
											"begin": 174,
											"end": 213,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 174,
											"end": 213,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 174,
											"end": 213,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 174,
											"end": 213,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 213,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1221,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1159,
											"end": 1161,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 174,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1025,
											"end": 1228,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 222,
											"end": 272,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 222,
											"end": 272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 452,
											"end": 748,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 452,
											"end": 748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 452,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 452,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 452,
											"end": 748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 756,
											"end": 882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 855,
											"end": 874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 855,
											"end": 874,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 855,
											"end": 868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 855,
											"end": 874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 855,
											"end": 874,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 855,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 855,
											"end": 874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 855,
											"end": 874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 855,
											"end": 874,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 855,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 874,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 855,
											"end": 874,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 855,
											"end": 874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 855,
											"end": 874,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 819,
											"end": 835,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 819,
											"end": 835,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 855,
											"end": 874,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 848,
											"end": 874,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 848,
											"end": 874,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 874,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 848,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 874,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 848,
											"end": 874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 848,
											"end": 874,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 848,
											"end": 874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 848,
											"end": 874,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 848,
											"end": 874,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 848,
											"end": 874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 848,
											"end": 874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 756,
											"end": 882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 222,
											"end": 272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 222,
											"end": 272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 452,
											"end": 748,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 452,
											"end": 748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 500,
											"end": 507,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 549,
											"end": 563,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "525"
										},
										{
											"begin": 536,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 536,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 536,
											"end": 564,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 536,
											"end": 564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "189ACDBD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 575,
											"end": 617,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 606,
											"end": 616,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 520,
											"end": 564,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 520,
											"end": 564,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 575,
											"end": 605,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 575,
											"end": 605,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 575,
											"end": 605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 575,
											"end": 605,
											"name": "PUSH",
											"source": 3,
											"value": "C4D66DE8"
										},
										{
											"begin": 575,
											"end": 605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1144,
											"end": 1162,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1144,
											"end": 1162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 575,
											"end": 617,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 575,
											"end": 617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 642,
											"end": 652,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 628,
											"end": 641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 628,
											"end": 653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 628,
											"end": 653,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 628,
											"end": 653,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 628,
											"end": 653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 628,
											"end": 653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 628,
											"end": 653,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 628,
											"end": 653,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 653,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 628,
											"end": 653,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 628,
											"end": 665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 628,
											"end": 665,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 628,
											"end": 665,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 683,
											"end": 717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 683,
											"end": 717,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 642,
											"end": 652,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 642,
											"end": 652,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 683,
											"end": 717,
											"name": "PUSH",
											"source": 3,
											"value": "2D49C67975AADD2D389580B368CFFF5B49965B0BD5DA33C144922CE01E7A4D7B"
										},
										{
											"begin": 683,
											"end": 717,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1144,
											"end": 1162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 683,
											"end": 717,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 717,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 683,
											"end": 717,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 683,
											"end": 717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 683,
											"end": 717,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 683,
											"end": 717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 683,
											"end": 717,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 735,
											"end": 740,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 452,
											"end": 748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 452,
											"end": 748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1162,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1155,
											"end": 1186,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1585,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1710,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1689,
											"end": 1718,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CF479181"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1789,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1691,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1725,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1707,
											"end": 1725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1707,
											"end": 1725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1734,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1657,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1639,
											"end": 1657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1741,
											"end": 1797,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1685,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2094,
											"end": 2142,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 2076,
											"end": 2090,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2074,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2066,
											"end": 2091,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2064,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 2056,
											"end": 2092,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2053,
											"end": 2143,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2301,
											"end": 2333,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 2284,
											"end": 2298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2274,
											"end": 2299,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2334,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2265,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2374,
											"end": 2378,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2367,
											"end": 2372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2385,
											"name": "CREATE",
											"source": 0
										},
										{
											"begin": 2348,
											"end": 2385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2404,
											"end": 2489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B06EBF3D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2453,
											"end": 2478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 383,
											"end": 1020,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 383,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 573,
											"end": 575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 606,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 585,
											"end": 606,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 585,
											"end": 606,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 655,
											"end": 668,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 655,
											"end": 668,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 558,
											"end": 576,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 558,
											"end": 576,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 558,
											"end": 576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 677,
											"end": 699,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 677,
											"end": 699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 677,
											"end": 699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 525,
											"end": 529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 756,
											"end": 771,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 756,
											"end": 771,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 756,
											"end": 771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 730,
											"end": 732,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 715,
											"end": 733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 715,
											"end": 733,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 529,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 799,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 799,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 813,
											"end": 819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 810,
											"end": 811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 807,
											"end": 820,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 799,
											"end": 994,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 799,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 799,
											"end": 994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 878,
											"end": 891,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 878,
											"end": 891,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 874,
											"end": 913,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 862,
											"end": 914,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 862,
											"end": 914,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 943,
											"end": 945,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 969,
											"end": 984,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 969,
											"end": 984,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 969,
											"end": 984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 969,
											"end": 984,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 934,
											"end": 946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 934,
											"end": 946,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 934,
											"end": 946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 934,
											"end": 946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 910,
											"end": 911,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 828,
											"end": 837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 799,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 799,
											"end": 994,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 799,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 799,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1011,
											"end": 1014,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1011,
											"end": 1014,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 383,
											"end": 1020,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 383,
											"end": 1020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1487,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1233,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1364,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1348,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1360,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1365,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1382,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1330,
											"end": 1382,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1380,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1382,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1330,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1401,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1430,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1401,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1430,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1481,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1481,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1233,
											"end": 1487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/KlineFactory.sol",
								"contracts/KlineStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createKlineStorage()": "db6d66c0",
							"getUserContracts(address)": "34c925f0",
							"implementation()": "5c60da1b",
							"userContracts(address,uint256)": "b789003d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createKlineStorage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KlineFactory.sol\":\"KlineFactory\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7162fa3c6971aa6f0a70160fed018edbb8b1db3af9b034ef3f7c224c3bdb7431\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f212d25e8f357209838ad7ce8ebc89de79906d9fe580566962e889ecb090e6b4\",\"dweb:/ipfs/QmdbLuLwX24VB1Gdrabke584WyaUkuJSWuDzzuRgqAMFge\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"contracts/KlineFactory.sol\":{\"keccak256\":\"0x4ffd3f483704124a841bf98a270cc0522df94ddd370d5eb34096230c8f395278\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://babe96b491f96be477b0e5caa66c25dcf72c508feedbe22460884e5c81b68374\",\"dweb:/ipfs/QmW151s1jqkchxhm3RkY1wSD6jeLhKGkYfDiQ5jwdaC3a5\"]},\"contracts/KlineStorage.sol\":{\"keccak256\":\"0x99b7ba94f4c8452c1fd35ca8ebad789510f84c38fdee424f6d05319b92fce40d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abe08dd427581ba3f93df838dda4489e747ca181b0355b7623b256976c292f85\",\"dweb:/ipfs/Qmf4UxWzusdumGppYdgCXZbCsnqFcAmAQTGzUzKyvn9zDb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 530,
								"contract": "contracts/KlineFactory.sol:KlineFactory",
								"label": "userContracts",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/KlineStorage.sol": {
				"KlineStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "enum KlineStorage.Interval",
									"name": "interval",
									"type": "uint8"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "openTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "open",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "high",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "low",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "close",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "volume",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isClosed",
											"type": "bool"
										}
									],
									"internalType": "struct KlineStorage.Candle",
									"name": "candle",
									"type": "tuple"
								}
							],
							"name": "addCandle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum KlineStorage.Interval",
									"name": "",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "candles",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "openTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "open",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "high",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "low",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "close",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "volume",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isClosed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum KlineStorage.Interval",
									"name": "interval",
									"type": "uint8"
								}
							],
							"name": "getCandles",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "openTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "open",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "high",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "low",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "close",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "volume",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isClosed",
											"type": "bool"
										}
									],
									"internalType": "struct KlineStorage.Candle[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/KlineStorage.sol\":61:1026  contract KlineStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/KlineStorage.sol\":61:1026  contract KlineStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x158ef93e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2dd1afc5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x317650ac\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd0198d2f\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/KlineStorage.sol\":462:485  bool public initialized */\n    tag_3:\n      sload(0x02)\n      tag_9\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_9:\n      mload(0x40)\n        /* \"#utility.yul\":179:193   */\n      swap1\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"#utility.yul\":154:195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":142:144   */\n      0x20\n        /* \"#utility.yul\":127:145   */\n      add\n        /* \"contracts/KlineStorage.sol\":462:485  bool public initialized */\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KlineStorage.sol\":765:893  function addCandle(Interval interval, Candle memory candle) external onlyOwner {... */\n    tag_4:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/KlineStorage.sol\":409:453  mapping(Interval => Candle[]) public candles */\n    tag_5:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2580:2605   */\n      swap8\n      dup9\n      mstore\n        /* \"#utility.yul\":2636:2638   */\n      0x20\n        /* \"#utility.yul\":2621:2639   */\n      dup9\n      add\n        /* \"#utility.yul\":2614:2648   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":2664:2682   */\n      swap5\n      dup7\n      add\n        /* \"#utility.yul\":2657:2691   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":2722:2724   */\n      0x60\n        /* \"#utility.yul\":2707:2725   */\n      dup6\n      add\n        /* \"#utility.yul\":2700:2734   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2765:2768   */\n      0x80\n        /* \"#utility.yul\":2750:2769   */\n      dup5\n      add\n        /* \"#utility.yul\":2743:2778   */\n      mstore\n        /* \"#utility.yul\":2809:2812   */\n      0xa0\n        /* \"#utility.yul\":2794:2813   */\n      dup4\n      add\n        /* \"#utility.yul\":2787:2822   */\n      mstore\n        /* \"#utility.yul\":2866:2880   */\n      iszero\n        /* \"#utility.yul\":2859:2881   */\n      iszero\n        /* \"#utility.yul\":2853:2856   */\n      0xc0\n        /* \"#utility.yul\":2838:2857   */\n      dup3\n      add\n        /* \"#utility.yul\":2831:2882   */\n      mstore\n        /* \"#utility.yul\":2567:2570   */\n      0xe0\n        /* \"#utility.yul\":2552:2571   */\n      add\n        /* \"contracts/KlineStorage.sol\":409:453  mapping(Interval => Candle[]) public candles */\n      tag_11\n        /* \"#utility.yul\":2271:2888   */\n      jump\n        /* \"contracts/KlineStorage.sol\":90:110  address public owner */\n    tag_6:\n      sload(0x00)\n      tag_23\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_23:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3057:3089   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3039:3090   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3027:3029   */\n      0x20\n        /* \"#utility.yul\":3012:3030   */\n      add\n        /* \"contracts/KlineStorage.sol\":90:110  address public owner */\n      tag_11\n        /* \"#utility.yul\":2893:3096   */\n      jump\n        /* \"contracts/KlineStorage.sol\":595:757  function initialize(address _owner) external {... */\n    tag_7:\n      tag_13\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"contracts/KlineStorage.sol\":901:1023  function getCandles(Interval interval) external view returns (Candle[] memory) {... */\n    tag_8:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n        /* \"contracts/KlineStorage.sol\":765:893  function addCandle(Interval interval, Candle memory candle) external onlyOwner {... */\n    tag_16:\n        /* \"contracts/KlineStorage.sol\":548:553  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/KlineStorage.sol\":534:544  msg.sender */\n      caller\n        /* \"contracts/KlineStorage.sol\":534:553  msg.sender == owner */\n      eq\n        /* \"contracts/KlineStorage.sol\":526:567  require(msg.sender == owner, \"Not owner\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4849:4851   */\n      0x20\n        /* \"contracts/KlineStorage.sol\":526:567  require(msg.sender == owner, \"Not owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4831:4852   */\n      mstore\n        /* \"#utility.yul\":4888:4889   */\n      0x09\n        /* \"#utility.yul\":4868:4886   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4861:4890   */\n      mstore\n      shl(0xb9, 0x2737ba1037bbb732b9)\n        /* \"#utility.yul\":4906:4924   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4899:4938   */\n      mstore\n        /* \"#utility.yul\":4955:4973   */\n      0x64\n      add\n        /* \"contracts/KlineStorage.sol\":526:567  require(msg.sender == owner, \"Not owner\") */\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"contracts/KlineStorage.sol\":855:862  candles */\n      0x01\n        /* \"contracts/KlineStorage.sol\":855:872  candles[interval] */\n      0x00\n        /* \"contracts/KlineStorage.sol\":863:871  interval */\n      dup4\n        /* \"contracts/KlineStorage.sol\":855:872  candles[interval] */\n      0x07\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      0x07\n      dup2\n      gt\n      iszero\n      tag_46\n      jumpi\n      tag_46\n      tag_44\n      jump\t// in\n    tag_46:\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/KlineStorage.sol\":855:885  candles[interval].push(candle) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      swap2\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n      dup6\n      mload\n      0x07\n      swap1\n      swap4\n      mul\n      add\n      swap2\n      dup3\n      sstore\n      swap3\n      dup5\n      add\n      mload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n      dup3\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      0x03\n      dup3\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      0x04\n      dup3\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      0x05\n      dup3\n      add\n      sstore\n      0xc0\n      swap1\n      swap2\n      add\n      mload\n      0x06\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/KlineStorage.sol\":765:893  function addCandle(Interval interval, Candle memory candle) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/KlineStorage.sol\":409:453  mapping(Interval => Candle[]) public candles */\n    tag_20:\n      mstore(0x20, 0x01)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x07\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      dup7\n      add\n      sload\n      0x06\n      swap1\n      swap7\n      add\n      sload\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      swap1\n      swap3\n      0xff\n      and\n      dup8\n      jump\t// out\n        /* \"contracts/KlineStorage.sol\":595:757  function initialize(address _owner) external {... */\n    tag_30:\n        /* \"contracts/KlineStorage.sol\":660:671  initialized */\n      and(0xff, sload(0x02))\n        /* \"contracts/KlineStorage.sol\":659:671  !initialized */\n      iszero\n        /* \"contracts/KlineStorage.sol\":651:695  require(!initialized, \"Already initialized\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5318:5320   */\n      0x20\n        /* \"contracts/KlineStorage.sol\":651:695  require(!initialized, \"Already initialized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5300:5321   */\n      mstore\n        /* \"#utility.yul\":5357:5359   */\n      0x13\n        /* \"#utility.yul\":5337:5355   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5330:5360   */\n      mstore\n      shl(0x6a, 0x105b1c9958591e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":5376:5394   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5369:5418   */\n      mstore\n        /* \"#utility.yul\":5435:5453   */\n      0x64\n      add\n        /* \"contracts/KlineStorage.sol\":651:695  require(!initialized, \"Already initialized\") */\n      tag_39\n        /* \"#utility.yul\":5116:5459   */\n      jump\n        /* \"contracts/KlineStorage.sol\":651:695  require(!initialized, \"Already initialized\") */\n    tag_51:\n        /* \"contracts/KlineStorage.sol\":706:711  owner */\n      0x00\n        /* \"contracts/KlineStorage.sol\":706:720  owner = _owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/KlineStorage.sol\":731:742  initialized */\n      0x02\n        /* \"contracts/KlineStorage.sol\":731:749  initialized = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"contracts/KlineStorage.sol\":595:757  function initialize(address _owner) external {... */\n      jump\t// out\n        /* \"contracts/KlineStorage.sol\":901:1023  function getCandles(Interval interval) external view returns (Candle[] memory) {... */\n    tag_34:\n        /* \"contracts/KlineStorage.sol\":963:978  Candle[] memory */\n      0x60\n        /* \"contracts/KlineStorage.sol\":998:1005  candles */\n      0x01\n        /* \"contracts/KlineStorage.sol\":998:1015  candles[interval] */\n      0x00\n        /* \"contracts/KlineStorage.sol\":1006:1014  interval */\n      dup4\n        /* \"contracts/KlineStorage.sol\":998:1015  candles[interval] */\n      0x07\n      dup2\n      gt\n      iszero\n      tag_56\n      jumpi\n      tag_56\n      tag_44\n      jump\t// in\n    tag_56:\n      0x07\n      dup2\n      gt\n      iszero\n      tag_58\n      jumpi\n      tag_58\n      tag_44\n      jump\t// in\n    tag_58:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KlineStorage.sol\":991:1015  return candles[interval] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_59:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      0xe0\n      dup2\n      add\n      dup3\n      mstore\n      0x07\n      dup7\n      mul\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      dup1\n      dup3\n      add\n      sload\n      dup5\n      dup7\n      add\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      0x80\n      dup5\n      add\n      mstore\n      0x05\n      dup2\n      add\n      sload\n      0xa0\n      dup5\n      add\n      mstore\n      0x06\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xc0\n      dup4\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_59)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/KlineStorage.sol\":901:1023  function getCandles(Interval interval) external view returns (Candle[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":206:355   */\n    tag_62:\n        /* \"#utility.yul\":280:300   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":329:330   */\n      0x08\n        /* \"#utility.yul\":319:331   */\n      dup2\n      lt\n        /* \"#utility.yul\":309:349   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":345:346   */\n      0x00\n        /* \"#utility.yul\":342:343   */\n      0x00\n        /* \"#utility.yul\":335:347   */\n      revert\n        /* \"#utility.yul\":309:349   */\n    tag_67:\n        /* \"#utility.yul\":206:355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":360:520   */\n    tag_63:\n        /* \"#utility.yul\":425:445   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":481:494   */\n      dup1\n      iszero\n        /* \"#utility.yul\":474:495   */\n      iszero\n        /* \"#utility.yul\":464:496   */\n      dup2\n      eq\n        /* \"#utility.yul\":454:514   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":510:511   */\n      0x00\n        /* \"#utility.yul\":507:508   */\n      0x00\n        /* \"#utility.yul\":500:512   */\n      revert\n        /* \"#utility.yul\":525:1943   */\n    tag_15:\n        /* \"#utility.yul\":628:634   */\n      0x00\n        /* \"#utility.yul\":636:642   */\n      0x00\n        /* \"#utility.yul\":680:689   */\n      dup3\n        /* \"#utility.yul\":671:678   */\n      dup5\n        /* \"#utility.yul\":667:690   */\n      sub\n        /* \"#utility.yul\":710:713   */\n      0x0100\n        /* \"#utility.yul\":706:708   */\n      dup2\n        /* \"#utility.yul\":702:714   */\n      slt\n        /* \"#utility.yul\":699:731   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":727:728   */\n      0x00\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":717:729   */\n      revert\n        /* \"#utility.yul\":699:731   */\n    tag_71:\n        /* \"#utility.yul\":750:785   */\n      tag_72\n        /* \"#utility.yul\":775:784   */\n      dup5\n        /* \"#utility.yul\":750:785   */\n      tag_62\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":740:785   */\n      swap3\n      pop\n        /* \"#utility.yul\":819:823   */\n      0xe0\n      not(0x1f)\n        /* \"#utility.yul\":801:817   */\n      dup3\n      add\n        /* \"#utility.yul\":797:824   */\n      slt\n        /* \"#utility.yul\":794:841   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":837:838   */\n      0x00\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":827:839   */\n      revert\n        /* \"#utility.yul\":794:841   */\n    tag_73:\n      pop\n        /* \"#utility.yul\":870:872   */\n      0x40\n        /* \"#utility.yul\":864:873   */\n      mload\n        /* \"#utility.yul\":912:916   */\n      0xe0\n        /* \"#utility.yul\":904:910   */\n      dup2\n        /* \"#utility.yul\":900:917   */\n      add\n        /* \"#utility.yul\":983:989   */\n      dup2\n        /* \"#utility.yul\":971:981   */\n      dup2\n        /* \"#utility.yul\":968:990   */\n      lt\n        /* \"#utility.yul\":947:965   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":935:945   */\n      dup3\n        /* \"#utility.yul\":932:966   */\n      gt\n        /* \"#utility.yul\":929:991   */\n      or\n        /* \"#utility.yul\":926:1111   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1033:1043   */\n      0x4e487b71\n        /* \"#utility.yul\":1028:1031   */\n      0xe0\n        /* \"#utility.yul\":1024:1044   */\n      shl\n        /* \"#utility.yul\":1021:1022   */\n      0x00\n        /* \"#utility.yul\":1014:1045   */\n      mstore\n        /* \"#utility.yul\":1068:1072   */\n      0x41\n        /* \"#utility.yul\":1065:1066   */\n      0x04\n        /* \"#utility.yul\":1058:1073   */\n      mstore\n        /* \"#utility.yul\":1096:1100   */\n      0x24\n        /* \"#utility.yul\":1093:1094   */\n      0x00\n        /* \"#utility.yul\":1086:1101   */\n      revert\n        /* \"#utility.yul\":926:1111   */\n    tag_74:\n        /* \"#utility.yul\":1127:1129   */\n      0x40\n        /* \"#utility.yul\":1120:1142   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1211:1213   */\n      0x20\n        /* \"#utility.yul\":1196:1214   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1183:1215   */\n      calldataload\n        /* \"#utility.yul\":1224:1245   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1303:1321   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1290:1322   */\n      calldataload\n        /* \"#utility.yul\":1338:1353   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":1331:1363   */\n      mstore\n        /* \"#utility.yul\":1436:1438   */\n      0x60\n        /* \"#utility.yul\":1421:1439   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":1408:1440   */\n      calldataload\n        /* \"#utility.yul\":1456:1471   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":1449:1481   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1554:1557   */\n      0x80\n        /* \"#utility.yul\":1539:1558   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":1526:1559   */\n      calldataload\n        /* \"#utility.yul\":1575:1590   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":1568:1600   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1673:1676   */\n      0xa0\n        /* \"#utility.yul\":1658:1677   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":1645:1678   */\n      calldataload\n        /* \"#utility.yul\":1694:1710   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":1687:1720   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1793:1796   */\n      0xc0\n        /* \"#utility.yul\":1778:1797   */\n      dup6\n      add\n        /* \"#utility.yul\":1765:1798   */\n      calldataload\n        /* \"#utility.yul\":1814:1830   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1807:1840   */\n      mstore\n        /* \"#utility.yul\":1874:1911   */\n      tag_75\n        /* \"#utility.yul\":1905:1909   */\n      0xe0\n        /* \"#utility.yul\":1890:1910   */\n      dup6\n      add\n        /* \"#utility.yul\":1874:1911   */\n      tag_63\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1868:1871   */\n      0xc0\n        /* \"#utility.yul\":1860:1866   */\n      dup3\n        /* \"#utility.yul\":1856:1872   */\n      add\n        /* \"#utility.yul\":1849:1912   */\n      mstore\n        /* \"#utility.yul\":1931:1937   */\n      dup1\n        /* \"#utility.yul\":1921:1937   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":525:1943   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1948:2266   */\n    tag_19:\n        /* \"#utility.yul\":2028:2034   */\n      0x00\n        /* \"#utility.yul\":2036:2042   */\n      0x00\n        /* \"#utility.yul\":2089:2091   */\n      0x40\n        /* \"#utility.yul\":2077:2086   */\n      dup4\n        /* \"#utility.yul\":2068:2075   */\n      dup6\n        /* \"#utility.yul\":2064:2087   */\n      sub\n        /* \"#utility.yul\":2060:2092   */\n      slt\n        /* \"#utility.yul\":2057:2109   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":2105:2106   */\n      0x00\n        /* \"#utility.yul\":2102:2103   */\n      0x00\n        /* \"#utility.yul\":2095:2107   */\n      revert\n        /* \"#utility.yul\":2057:2109   */\n    tag_77:\n        /* \"#utility.yul\":2128:2163   */\n      tag_78\n        /* \"#utility.yul\":2153:2162   */\n      dup4\n        /* \"#utility.yul\":2128:2163   */\n      tag_62\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2118:2163   */\n      swap5\n        /* \"#utility.yul\":2232:2234   */\n      0x20\n        /* \"#utility.yul\":2217:2235   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2204:2236   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1948:2266   */\n      jump\t// out\n        /* \"#utility.yul\":3101:3387   */\n    tag_29:\n        /* \"#utility.yul\":3160:3166   */\n      0x00\n        /* \"#utility.yul\":3213:3215   */\n      0x20\n        /* \"#utility.yul\":3201:3210   */\n      dup3\n        /* \"#utility.yul\":3192:3199   */\n      dup5\n        /* \"#utility.yul\":3188:3211   */\n      sub\n        /* \"#utility.yul\":3184:3216   */\n      slt\n        /* \"#utility.yul\":3181:3233   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":3229:3230   */\n      0x00\n        /* \"#utility.yul\":3226:3227   */\n      0x00\n        /* \"#utility.yul\":3219:3231   */\n      revert\n        /* \"#utility.yul\":3181:3233   */\n    tag_82:\n        /* \"#utility.yul\":3255:3278   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3307:3338   */\n      dup2\n      and\n        /* \"#utility.yul\":3297:3339   */\n      dup2\n      eq\n        /* \"#utility.yul\":3287:3357   */\n      tag_83\n      jumpi\n        /* \"#utility.yul\":3353:3354   */\n      0x00\n        /* \"#utility.yul\":3350:3351   */\n      0x00\n        /* \"#utility.yul\":3343:3355   */\n      revert\n        /* \"#utility.yul\":3287:3357   */\n    tag_83:\n        /* \"#utility.yul\":3376:3381   */\n      swap4\n        /* \"#utility.yul\":3101:3387   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3392:3596   */\n    tag_33:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3516:3518   */\n      0x20\n        /* \"#utility.yul\":3504:3513   */\n      dup3\n        /* \"#utility.yul\":3495:3502   */\n      dup5\n        /* \"#utility.yul\":3491:3514   */\n      sub\n        /* \"#utility.yul\":3487:3519   */\n      slt\n        /* \"#utility.yul\":3484:3536   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":3532:3533   */\n      0x00\n        /* \"#utility.yul\":3529:3530   */\n      0x00\n        /* \"#utility.yul\":3522:3534   */\n      revert\n        /* \"#utility.yul\":3484:3536   */\n    tag_85:\n        /* \"#utility.yul\":3555:3590   */\n      tag_83\n        /* \"#utility.yul\":3580:3589   */\n      dup3\n        /* \"#utility.yul\":3555:3590   */\n      tag_62\n      jump\t// in\n        /* \"#utility.yul\":3601:4642   */\n    tag_36:\n        /* \"#utility.yul\":3837:3839   */\n      0x20\n        /* \"#utility.yul\":3849:3870   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3919:3932   */\n      dup3\n      mload\n        /* \"#utility.yul\":3822:3840   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3941:3963   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3789:3793   */\n      0x00\n      swap2\n        /* \"#utility.yul\":4020:4035   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":3994:3996   */\n      0x40\n        /* \"#utility.yul\":3979:3997   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":3789:3793   */\n      dup4\n        /* \"#utility.yul\":4063:4616   */\n    tag_88:\n        /* \"#utility.yul\":4077:4083   */\n      dup2\n        /* \"#utility.yul\":4074:4075   */\n      dup2\n        /* \"#utility.yul\":4071:4084   */\n      lt\n        /* \"#utility.yul\":4063:4616   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":4142:4148   */\n      dup4\n        /* \"#utility.yul\":4136:4149   */\n      mload\n        /* \"#utility.yul\":4180:4182   */\n      dup1\n        /* \"#utility.yul\":4174:4183   */\n      mload\n        /* \"#utility.yul\":4169:4172   */\n      dup5\n        /* \"#utility.yul\":4162:4184   */\n      mstore\n        /* \"#utility.yul\":4232:4234   */\n      0x20\n        /* \"#utility.yul\":4228:4230   */\n      dup2\n        /* \"#utility.yul\":4224:4235   */\n      add\n        /* \"#utility.yul\":4218:4236   */\n      mload\n        /* \"#utility.yul\":4213:4215   */\n      0x20\n        /* \"#utility.yul\":4208:4211   */\n      dup6\n        /* \"#utility.yul\":4204:4216   */\n      add\n        /* \"#utility.yul\":4197:4237   */\n      mstore\n        /* \"#utility.yul\":4285:4287   */\n      0x40\n        /* \"#utility.yul\":4281:4283   */\n      dup2\n        /* \"#utility.yul\":4277:4288   */\n      add\n        /* \"#utility.yul\":4271:4289   */\n      mload\n        /* \"#utility.yul\":4266:4268   */\n      0x40\n        /* \"#utility.yul\":4261:4264   */\n      dup6\n        /* \"#utility.yul\":4257:4269   */\n      add\n        /* \"#utility.yul\":4250:4290   */\n      mstore\n        /* \"#utility.yul\":4340:4344   */\n      0x60\n        /* \"#utility.yul\":4336:4338   */\n      dup2\n        /* \"#utility.yul\":4332:4345   */\n      add\n        /* \"#utility.yul\":4326:4346   */\n      mload\n        /* \"#utility.yul\":4319:4323   */\n      0x60\n        /* \"#utility.yul\":4314:4317   */\n      dup6\n        /* \"#utility.yul\":4310:4324   */\n      add\n        /* \"#utility.yul\":4303:4347   */\n      mstore\n        /* \"#utility.yul\":4397:4401   */\n      0x80\n        /* \"#utility.yul\":4393:4395   */\n      dup2\n        /* \"#utility.yul\":4389:4402   */\n      add\n        /* \"#utility.yul\":4383:4403   */\n      mload\n        /* \"#utility.yul\":4376:4380   */\n      0x80\n        /* \"#utility.yul\":4371:4374   */\n      dup6\n        /* \"#utility.yul\":4367:4381   */\n      add\n        /* \"#utility.yul\":4360:4404   */\n      mstore\n        /* \"#utility.yul\":4454:4458   */\n      0xa0\n        /* \"#utility.yul\":4450:4452   */\n      dup2\n        /* \"#utility.yul\":4446:4459   */\n      add\n        /* \"#utility.yul\":4440:4460   */\n      mload\n        /* \"#utility.yul\":4433:4437   */\n      0xa0\n        /* \"#utility.yul\":4428:4431   */\n      dup6\n        /* \"#utility.yul\":4424:4438   */\n      add\n        /* \"#utility.yul\":4417:4461   */\n      mstore\n        /* \"#utility.yul\":4525:4529   */\n      0xc0\n        /* \"#utility.yul\":4521:4523   */\n      dup2\n        /* \"#utility.yul\":4517:4530   */\n      add\n        /* \"#utility.yul\":4511:4531   */\n      mload\n        /* \"#utility.yul\":4504:4532   */\n      iszero\n        /* \"#utility.yul\":4497:4533   */\n      iszero\n        /* \"#utility.yul\":4490:4494   */\n      0xc0\n        /* \"#utility.yul\":4485:4488   */\n      dup6\n        /* \"#utility.yul\":4481:4495   */\n      add\n        /* \"#utility.yul\":4474:4534   */\n      mstore\n      pop\n        /* \"#utility.yul\":4563:4567   */\n      0xe0\n        /* \"#utility.yul\":4558:4561   */\n      dup4\n        /* \"#utility.yul\":4554:4568   */\n      add\n        /* \"#utility.yul\":4547:4568   */\n      swap3\n      pop\n        /* \"#utility.yul\":4603:4605   */\n      0x20\n        /* \"#utility.yul\":4595:4601   */\n      dup5\n        /* \"#utility.yul\":4591:4606   */\n      add\n        /* \"#utility.yul\":4581:4606   */\n      swap4\n      pop\n        /* \"#utility.yul\":4099:4100   */\n      0x01\n        /* \"#utility.yul\":4096:4097   */\n      dup2\n        /* \"#utility.yul\":4092:4101   */\n      add\n        /* \"#utility.yul\":4087:4101   */\n      swap1\n      pop\n        /* \"#utility.yul\":4063:4616   */\n      jump(tag_88)\n    tag_90:\n      pop\n        /* \"#utility.yul\":4633:4636   */\n      swap1\n      swap6\n        /* \"#utility.yul\":3601:4642   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4984:5111   */\n    tag_44:\n        /* \"#utility.yul\":5045:5055   */\n      0x4e487b71\n        /* \"#utility.yul\":5040:5043   */\n      0xe0\n        /* \"#utility.yul\":5036:5056   */\n      shl\n        /* \"#utility.yul\":5033:5034   */\n      0x00\n        /* \"#utility.yul\":5026:5057   */\n      mstore\n        /* \"#utility.yul\":5076:5080   */\n      0x21\n        /* \"#utility.yul\":5073:5074   */\n      0x04\n        /* \"#utility.yul\":5066:5081   */\n      mstore\n        /* \"#utility.yul\":5100:5104   */\n      0x24\n        /* \"#utility.yul\":5097:5098   */\n      0x00\n        /* \"#utility.yul\":5090:5105   */\n      revert\n\n    auxdata: 0xa264697066735822122098fbbad1ec8b8fa0b4df90ea74e764624674d8ae16962f298ae9d3103aa2825264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506105f68061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610060575f3560e01c8063158ef93e146100645780632dd1afc514610086578063317650ac1461009b5780638da5cb5b146100e5578063c4d66de81461010f578063d0198d2f14610122575b5f5ffd5b6002546100719060ff1681565b60405190151581526020015b60405180910390f35b6100996100943660046103f6565b610142565b005b6100ae6100a93660046104b6565b61022f565b604080519788526020880196909652948601939093526060850191909152608084015260a0830152151560c082015260e00161007d565b5f546100f7906001600160a01b031681565b6040516001600160a01b03909116815260200161007d565b61009961011d3660046104de565b610288565b61013561013036600461050b565b6102ff565b60405161007d9190610524565b5f546001600160a01b0316331461018c5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b60015f8360078111156101a1576101a16105ac565b60078111156101b2576101b26105ac565b815260208082019290925260409081015f90812080546001808201835591835291849020855160079093020191825592840151928101929092558201516002820155606082015160038201556080820151600482015560a0820151600582015560c0909101516006909101805460ff191691151591909117905550565b6001602052815f5260405f208181548110610248575f80fd5b5f91825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601549497509295509093909260ff1687565b60025460ff16156102d15760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610183565b5f80546001600160a01b0319166001600160a01b03929092169190911790556002805460ff19166001179055565b606060015f836007811115610316576103166105ac565b6007811115610327576103276105ac565b81526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b828210156103c9575f8481526020908190206040805160e0810182526007860290920180548352600180820154848601526002820154928401929092526003810154606084015260048101546080840152600581015460a08401526006015460ff16151560c08301529083529092019101610353565b505050509050919050565b8035600881106103e2575f5ffd5b919050565b803580151581146103e2575f5ffd5b5f5f828403610100811215610409575f5ffd5b610412846103d4565b925060e0601f1982011215610425575f5ffd5b5060405160e0810181811067ffffffffffffffff8211171561045557634e487b7160e01b5f52604160045260245ffd5b604090815260208581013583528582013590830152606080860135918301919091526080808601359183019190915260a0808601359183019190915260c0850135908201526104a660e085016103e7565b60c0820152809150509250929050565b5f5f604083850312156104c7575f5ffd5b6104d0836103d4565b946020939093013593505050565b5f602082840312156104ee575f5ffd5b81356001600160a01b0381168114610504575f5ffd5b9392505050565b5f6020828403121561051b575f5ffd5b610504826103d4565b602080825282518282018190525f918401906040840190835b818110156105a1578351805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c0810151151560c08501525060e08301925060208401935060018101905061053d565b509095945050505050565b634e487b7160e01b5f52602160045260245ffdfea264697066735822122098fbbad1ec8b8fa0b4df90ea74e764624674d8ae16962f298ae9d3103aa2825264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x5F6 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x158EF93E EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x2DD1AFC5 EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x317650AC EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xD0198D2F EQ PUSH2 0x122 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x71 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH2 0x94 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0xA9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x7D JUMP JUMPDEST PUSH0 SLOAD PUSH2 0xF7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7D JUMP JUMPDEST PUSH2 0x99 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1A1 JUMPI PUSH2 0x1A1 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1B2 JUMPI PUSH2 0x1B2 PUSH2 0x5AC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP6 MLOAD PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP3 DUP5 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x248 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP8 POP SWAP3 SWAP6 POP SWAP1 SWAP4 SWAP1 SWAP3 PUSH1 0xFF AND DUP8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH0 DUP4 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x316 JUMPI PUSH2 0x316 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x327 JUMPI PUSH2 0x327 PUSH2 0x5AC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3C9 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x7 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x353 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x8 DUP2 LT PUSH2 0x3E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP3 DUP5 SUB PUSH2 0x100 DUP2 SLT ISZERO PUSH2 0x409 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x412 DUP5 PUSH2 0x3D4 JUMP JUMPDEST SWAP3 POP PUSH1 0xE0 PUSH1 0x1F NOT DUP3 ADD SLT ISZERO PUSH2 0x425 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x455 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 ADD CALLDATALOAD DUP4 MSTORE DUP6 DUP3 ADD CALLDATALOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD CALLDATALOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP1 DUP7 ADD CALLDATALOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP1 DUP7 ADD CALLDATALOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP6 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x4A6 PUSH1 0xE0 DUP6 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4D0 DUP4 PUSH2 0x3D4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x504 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x504 DUP3 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5A1 JUMPI DUP4 MLOAD DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE POP PUSH1 0xE0 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x53D JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 EXTSTATICCALL 0xBA DATALOADN 0xEC8B DUP16 LOG0 0xB4 0xDF SWAP1 0xEA PUSH21 0xE764624674D8AE16962F298AE9D3103AA282526473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "61:965:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addCandle_685": {
									"entryPoint": 322,
									"id": 685,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@candles_632": {
									"entryPoint": 559,
									"id": 632,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCandles_700": {
									"entryPoint": 767,
									"id": 700,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_666": {
									"entryPoint": 648,
									"id": 666,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialized_634": {
									"entryPoint": null,
									"id": 634,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_601": {
									"entryPoint": null,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_bool": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_enum_Interval": {
									"entryPoint": 980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_Interval_$610": {
									"entryPoint": 1291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_Interval_$610t_struct$_Candle_$625_memory_ptr": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_enum$_Interval_$610t_uint256": {
									"entryPoint": 1206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Candle_$625_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Candle_$625_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5461:5",
										"nodeType": "YulBlock",
										"src": "0:5461:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "109:92:5",
													"nodeType": "YulBlock",
													"src": "109:92:5",
													"statements": [
														{
															"nativeSrc": "119:26:5",
															"nodeType": "YulAssignment",
															"src": "119:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "131:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "131:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "142:2:5",
																		"nodeType": "YulLiteral",
																		"src": "142:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "127:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "127:3:5"
																},
																"nativeSrc": "127:18:5",
																"nodeType": "YulFunctionCall",
																"src": "127:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "119:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "119:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "161:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "161:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "186:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "186:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "179:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "179:6:5"
																				},
																				"nativeSrc": "179:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "179:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "172:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "172:6:5"
																		},
																		"nativeSrc": "172:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "172:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "154:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "154:6:5"
																},
																"nativeSrc": "154:41:5",
																"nodeType": "YulFunctionCall",
																"src": "154:41:5"
															},
															"nativeSrc": "154:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "154:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "14:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "78:9:5",
														"nodeType": "YulTypedName",
														"src": "78:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "89:6:5",
														"nodeType": "YulTypedName",
														"src": "89:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "100:4:5",
														"nodeType": "YulTypedName",
														"src": "100:4:5",
														"type": ""
													}
												],
												"src": "14:187:5"
											},
											{
												"body": {
													"nativeSrc": "261:94:5",
													"nodeType": "YulBlock",
													"src": "261:94:5",
													"statements": [
														{
															"nativeSrc": "271:29:5",
															"nodeType": "YulAssignment",
															"src": "271:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "293:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "293:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "280:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "280:12:5"
																},
																"nativeSrc": "280:20:5",
																"nodeType": "YulFunctionCall",
																"src": "280:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "271:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "271:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "333:16:5",
																"nodeType": "YulBlock",
																"src": "333:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "342:1:5",
																					"nodeType": "YulLiteral",
																					"src": "342:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "345:1:5",
																					"nodeType": "YulLiteral",
																					"src": "345:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "335:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:5"
																			},
																			"nativeSrc": "335:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "335:12:5"
																		},
																		"nativeSrc": "335:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "335:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "322:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "322:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "329:1:5",
																				"nodeType": "YulLiteral",
																				"src": "329:1:5",
																				"type": "",
																				"value": "8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "319:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "319:2:5"
																		},
																		"nativeSrc": "319:12:5",
																		"nodeType": "YulFunctionCall",
																		"src": "319:12:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "312:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "312:6:5"
																},
																"nativeSrc": "312:20:5",
																"nodeType": "YulFunctionCall",
																"src": "312:20:5"
															},
															"nativeSrc": "309:40:5",
															"nodeType": "YulIf",
															"src": "309:40:5"
														}
													]
												},
												"name": "abi_decode_enum_Interval",
												"nativeSrc": "206:149:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "240:6:5",
														"nodeType": "YulTypedName",
														"src": "240:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "251:5:5",
														"nodeType": "YulTypedName",
														"src": "251:5:5",
														"type": ""
													}
												],
												"src": "206:149:5"
											},
											{
												"body": {
													"nativeSrc": "406:114:5",
													"nodeType": "YulBlock",
													"src": "406:114:5",
													"statements": [
														{
															"nativeSrc": "416:29:5",
															"nodeType": "YulAssignment",
															"src": "416:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "438:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "438:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "425:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "425:12:5"
																},
																"nativeSrc": "425:20:5",
																"nodeType": "YulFunctionCall",
																"src": "425:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "416:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "416:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "498:16:5",
																"nodeType": "YulBlock",
																"src": "498:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "507:1:5",
																					"nodeType": "YulLiteral",
																					"src": "507:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "510:1:5",
																					"nodeType": "YulLiteral",
																					"src": "510:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "500:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "500:6:5"
																			},
																			"nativeSrc": "500:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "500:12:5"
																		},
																		"nativeSrc": "500:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "500:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "467:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "467:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "488:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "488:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "481:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "481:6:5"
																						},
																						"nativeSrc": "481:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "481:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "474:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "474:6:5"
																				},
																				"nativeSrc": "474:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "474:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "464:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "464:2:5"
																		},
																		"nativeSrc": "464:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "464:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "457:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:5"
																},
																"nativeSrc": "457:40:5",
																"nodeType": "YulFunctionCall",
																"src": "457:40:5"
															},
															"nativeSrc": "454:60:5",
															"nodeType": "YulIf",
															"src": "454:60:5"
														}
													]
												},
												"name": "abi_decode_bool",
												"nativeSrc": "360:160:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "385:6:5",
														"nodeType": "YulTypedName",
														"src": "385:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "396:5:5",
														"nodeType": "YulTypedName",
														"src": "396:5:5",
														"type": ""
													}
												],
												"src": "360:160:5"
											},
											{
												"body": {
													"nativeSrc": "647:1296:5",
													"nodeType": "YulBlock",
													"src": "647:1296:5",
													"statements": [
														{
															"nativeSrc": "657:33:5",
															"nodeType": "YulVariableDeclaration",
															"src": "657:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "dataEnd",
																		"nativeSrc": "671:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "671:7:5"
																	},
																	{
																		"name": "headStart",
																		"nativeSrc": "680:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "680:9:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "667:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "667:3:5"
																},
																"nativeSrc": "667:23:5",
																"nodeType": "YulFunctionCall",
																"src": "667:23:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "661:2:5",
																	"nodeType": "YulTypedName",
																	"src": "661:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "715:16:5",
																"nodeType": "YulBlock",
																"src": "715:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "724:1:5",
																					"nodeType": "YulLiteral",
																					"src": "724:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:5",
																					"nodeType": "YulLiteral",
																					"src": "727:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "717:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "717:6:5"
																			},
																			"nativeSrc": "717:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "717:12:5"
																		},
																		"nativeSrc": "717:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "717:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "706:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "706:2:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "710:3:5",
																		"nodeType": "YulLiteral",
																		"src": "710:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "702:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:5"
																},
																"nativeSrc": "702:12:5",
																"nodeType": "YulFunctionCall",
																"src": "702:12:5"
															},
															"nativeSrc": "699:32:5",
															"nodeType": "YulIf",
															"src": "699:32:5"
														},
														{
															"nativeSrc": "740:45:5",
															"nodeType": "YulAssignment",
															"src": "740:45:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "775:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "775:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_Interval",
																	"nativeSrc": "750:24:5",
																	"nodeType": "YulIdentifier",
																	"src": "750:24:5"
																},
																"nativeSrc": "750:35:5",
																"nodeType": "YulFunctionCall",
																"src": "750:35:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "740:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "740:6:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "825:16:5",
																"nodeType": "YulBlock",
																"src": "825:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "834:1:5",
																					"nodeType": "YulLiteral",
																					"src": "834:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "837:1:5",
																					"nodeType": "YulLiteral",
																					"src": "837:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "827:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "827:6:5"
																			},
																			"nativeSrc": "827:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "827:12:5"
																		},
																		"nativeSrc": "827:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "827:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "805:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "805:2:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "813:2:5",
																						"nodeType": "YulLiteral",
																						"src": "813:2:5",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "809:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:5"
																				},
																				"nativeSrc": "809:7:5",
																				"nodeType": "YulFunctionCall",
																				"src": "809:7:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "801:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "801:3:5"
																		},
																		"nativeSrc": "801:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "801:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "819:4:5",
																		"nodeType": "YulLiteral",
																		"src": "819:4:5",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "797:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "797:3:5"
																},
																"nativeSrc": "797:27:5",
																"nodeType": "YulFunctionCall",
																"src": "797:27:5"
															},
															"nativeSrc": "794:47:5",
															"nodeType": "YulIf",
															"src": "794:47:5"
														},
														{
															"nativeSrc": "850:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "850:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "870:2:5",
																		"nodeType": "YulLiteral",
																		"src": "870:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "864:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "864:5:5"
																},
																"nativeSrc": "864:9:5",
																"nodeType": "YulFunctionCall",
																"src": "864:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "854:6:5",
																	"nodeType": "YulTypedName",
																	"src": "854:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "882:35:5",
															"nodeType": "YulVariableDeclaration",
															"src": "882:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "904:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "904:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "912:4:5",
																		"nodeType": "YulLiteral",
																		"src": "912:4:5",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "900:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "900:3:5"
																},
																"nativeSrc": "900:17:5",
																"nodeType": "YulFunctionCall",
																"src": "900:17:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "886:10:5",
																	"nodeType": "YulTypedName",
																	"src": "886:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1000:111:5",
																"nodeType": "YulBlock",
																"src": "1000:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1021:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1021:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1028:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1028:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1033:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1033:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1024:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1024:3:5"
																					},
																					"nativeSrc": "1024:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1024:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1014:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1014:6:5"
																			},
																			"nativeSrc": "1014:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1014:31:5"
																		},
																		"nativeSrc": "1014:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1014:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1065:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1065:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1068:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1068:4:5",
																					"type": "",
																					"value": "0x41"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1058:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:5"
																			},
																			"nativeSrc": "1058:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1058:15:5"
																		},
																		"nativeSrc": "1058:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1058:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1093:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1093:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1096:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1096:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1086:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1086:6:5"
																			},
																			"nativeSrc": "1086:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:15:5"
																		},
																		"nativeSrc": "1086:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1086:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "935:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "935:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "947:18:5",
																				"nodeType": "YulLiteral",
																				"src": "947:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "932:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "932:2:5"
																		},
																		"nativeSrc": "932:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "932:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "971:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "971:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "983:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "983:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "968:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "968:2:5"
																		},
																		"nativeSrc": "968:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "968:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "929:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "929:2:5"
																},
																"nativeSrc": "929:62:5",
																"nodeType": "YulFunctionCall",
																"src": "929:62:5"
															},
															"nativeSrc": "926:185:5",
															"nodeType": "YulIf",
															"src": "926:185:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1127:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1127:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1131:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "1131:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1120:6:5"
																},
																"nativeSrc": "1120:22:5",
																"nodeType": "YulFunctionCall",
																"src": "1120:22:5"
															},
															"nativeSrc": "1120:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "1120:22:5"
														},
														{
															"nativeSrc": "1151:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1151:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1164:1:5",
																"nodeType": "YulLiteral",
																"src": "1164:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1155:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1155:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1174:41:5",
															"nodeType": "YulAssignment",
															"src": "1174:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1200:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1200:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1211:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1211:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1196:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1196:3:5"
																		},
																		"nativeSrc": "1196:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1196:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1183:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1183:12:5"
																},
																"nativeSrc": "1183:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1183:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1174:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1174:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1231:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1231:6:5"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1239:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1239:5:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1224:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1224:6:5"
																},
																"nativeSrc": "1224:21:5",
																"nodeType": "YulFunctionCall",
																"src": "1224:21:5"
															},
															"nativeSrc": "1224:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "1224:21:5"
														},
														{
															"nativeSrc": "1254:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1254:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1269:1:5",
																"nodeType": "YulLiteral",
																"src": "1269:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1258:7:5",
																	"nodeType": "YulTypedName",
																	"src": "1258:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1279:43:5",
															"nodeType": "YulAssignment",
															"src": "1279:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1307:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1307:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1318:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1318:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1303:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1303:3:5"
																		},
																		"nativeSrc": "1303:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1303:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1290:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1290:12:5"
																},
																"nativeSrc": "1290:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1290:32:5"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1279:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1279:7:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1342:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1342:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1350:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1350:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1338:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:5"
																		},
																		"nativeSrc": "1338:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1338:15:5"
																	},
																	{
																		"name": "value_1",
																		"nativeSrc": "1355:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1355:7:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1331:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:5"
																},
																"nativeSrc": "1331:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1331:32:5"
															},
															"nativeSrc": "1331:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "1331:32:5"
														},
														{
															"nativeSrc": "1372:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1372:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1387:1:5",
																"nodeType": "YulLiteral",
																"src": "1387:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "1376:7:5",
																	"nodeType": "YulTypedName",
																	"src": "1376:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1397:43:5",
															"nodeType": "YulAssignment",
															"src": "1397:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1425:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1436:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1436:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1421:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:5"
																		},
																		"nativeSrc": "1421:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1421:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1408:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1408:12:5"
																},
																"nativeSrc": "1408:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1408:32:5"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "1397:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1397:7:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1460:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1460:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1468:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1468:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1456:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:5"
																		},
																		"nativeSrc": "1456:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:15:5"
																	},
																	{
																		"name": "value_2",
																		"nativeSrc": "1473:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1473:7:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1449:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1449:6:5"
																},
																"nativeSrc": "1449:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1449:32:5"
															},
															"nativeSrc": "1449:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "1449:32:5"
														},
														{
															"nativeSrc": "1490:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1490:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1505:1:5",
																"nodeType": "YulLiteral",
																"src": "1505:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "1494:7:5",
																	"nodeType": "YulTypedName",
																	"src": "1494:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1515:44:5",
															"nodeType": "YulAssignment",
															"src": "1515:44:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1543:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1543:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1554:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1554:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1539:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1539:3:5"
																		},
																		"nativeSrc": "1539:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1539:19:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1526:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1526:12:5"
																},
																"nativeSrc": "1526:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1526:33:5"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "1515:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1515:7:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1579:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1587:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1575:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1575:3:5"
																		},
																		"nativeSrc": "1575:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1575:15:5"
																	},
																	{
																		"name": "value_3",
																		"nativeSrc": "1592:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1592:7:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1568:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1568:6:5"
																},
																"nativeSrc": "1568:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1568:32:5"
															},
															"nativeSrc": "1568:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "1568:32:5"
														},
														{
															"nativeSrc": "1609:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1609:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1624:1:5",
																"nodeType": "YulLiteral",
																"src": "1624:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "1613:7:5",
																	"nodeType": "YulTypedName",
																	"src": "1613:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1634:44:5",
															"nodeType": "YulAssignment",
															"src": "1634:44:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1662:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1673:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1673:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1658:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1658:3:5"
																		},
																		"nativeSrc": "1658:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1658:19:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1645:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1645:12:5"
																},
																"nativeSrc": "1645:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1645:33:5"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "1634:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1634:7:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1698:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1698:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1706:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1706:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1694:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1694:3:5"
																		},
																		"nativeSrc": "1694:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1694:16:5"
																	},
																	{
																		"name": "value_4",
																		"nativeSrc": "1712:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1712:7:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:5"
																},
																"nativeSrc": "1687:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1687:33:5"
															},
															"nativeSrc": "1687:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1687:33:5"
														},
														{
															"nativeSrc": "1729:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1729:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1744:1:5",
																"nodeType": "YulLiteral",
																"src": "1744:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "1733:7:5",
																	"nodeType": "YulTypedName",
																	"src": "1733:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1754:44:5",
															"nodeType": "YulAssignment",
															"src": "1754:44:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1782:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1782:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1793:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1793:3:5",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1778:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1778:3:5"
																		},
																		"nativeSrc": "1778:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1778:19:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1765:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1765:12:5"
																},
																"nativeSrc": "1765:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1765:33:5"
															},
															"variableNames": [
																{
																	"name": "value_5",
																	"nativeSrc": "1754:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1754:7:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1818:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1818:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1826:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1826:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1814:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1814:3:5"
																		},
																		"nativeSrc": "1814:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1814:16:5"
																	},
																	{
																		"name": "value_5",
																		"nativeSrc": "1832:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1832:7:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1807:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1807:6:5"
																},
																"nativeSrc": "1807:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1807:33:5"
															},
															"nativeSrc": "1807:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1807:33:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1860:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1860:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1868:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1868:3:5",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1856:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1856:3:5"
																		},
																		"nativeSrc": "1856:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1856:16:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1894:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1894:9:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1905:4:5",
																						"nodeType": "YulLiteral",
																						"src": "1905:4:5",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1890:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1890:3:5"
																				},
																				"nativeSrc": "1890:20:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1890:20:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_bool",
																			"nativeSrc": "1874:15:5",
																			"nodeType": "YulIdentifier",
																			"src": "1874:15:5"
																		},
																		"nativeSrc": "1874:37:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1874:37:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1849:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1849:6:5"
																},
																"nativeSrc": "1849:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1849:63:5"
															},
															"nativeSrc": "1849:63:5",
															"nodeType": "YulExpressionStatement",
															"src": "1849:63:5"
														},
														{
															"nativeSrc": "1921:16:5",
															"nodeType": "YulAssignment",
															"src": "1921:16:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1931:6:5",
																"nodeType": "YulIdentifier",
																"src": "1931:6:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1921:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1921:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Interval_$610t_struct$_Candle_$625_memory_ptr",
												"nativeSrc": "525:1418:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "605:9:5",
														"nodeType": "YulTypedName",
														"src": "605:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "616:7:5",
														"nodeType": "YulTypedName",
														"src": "616:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "628:6:5",
														"nodeType": "YulTypedName",
														"src": "628:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "636:6:5",
														"nodeType": "YulTypedName",
														"src": "636:6:5",
														"type": ""
													}
												],
												"src": "525:1418:5"
											},
											{
												"body": {
													"nativeSrc": "2047:219:5",
													"nodeType": "YulBlock",
													"src": "2047:219:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2093:16:5",
																"nodeType": "YulBlock",
																"src": "2093:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2102:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2102:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2105:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2105:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2095:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:5"
																			},
																			"nativeSrc": "2095:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2095:12:5"
																		},
																		"nativeSrc": "2095:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2095:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2068:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2068:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2077:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2064:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2064:3:5"
																		},
																		"nativeSrc": "2064:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2064:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2089:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2089:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2060:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2060:3:5"
																},
																"nativeSrc": "2060:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2060:32:5"
															},
															"nativeSrc": "2057:52:5",
															"nodeType": "YulIf",
															"src": "2057:52:5"
														},
														{
															"nativeSrc": "2118:45:5",
															"nodeType": "YulAssignment",
															"src": "2118:45:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2153:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2153:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_Interval",
																	"nativeSrc": "2128:24:5",
																	"nodeType": "YulIdentifier",
																	"src": "2128:24:5"
																},
																"nativeSrc": "2128:35:5",
																"nodeType": "YulFunctionCall",
																"src": "2128:35:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2118:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2118:6:5"
																}
															]
														},
														{
															"nativeSrc": "2172:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2172:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2185:1:5",
																"nodeType": "YulLiteral",
																"src": "2185:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2176:5:5",
																	"nodeType": "YulTypedName",
																	"src": "2176:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2195:41:5",
															"nodeType": "YulAssignment",
															"src": "2195:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2221:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2221:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2232:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2232:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2217:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2217:3:5"
																		},
																		"nativeSrc": "2217:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2217:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2204:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2204:12:5"
																},
																"nativeSrc": "2204:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2204:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2195:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2195:5:5"
																}
															]
														},
														{
															"nativeSrc": "2245:15:5",
															"nodeType": "YulAssignment",
															"src": "2245:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "2255:5:5",
																"nodeType": "YulIdentifier",
																"src": "2255:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2245:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2245:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Interval_$610t_uint256",
												"nativeSrc": "1948:318:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2005:9:5",
														"nodeType": "YulTypedName",
														"src": "2005:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2016:7:5",
														"nodeType": "YulTypedName",
														"src": "2016:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2028:6:5",
														"nodeType": "YulTypedName",
														"src": "2028:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2036:6:5",
														"nodeType": "YulTypedName",
														"src": "2036:6:5",
														"type": ""
													}
												],
												"src": "1948:318:5"
											},
											{
												"body": {
													"nativeSrc": "2534:354:5",
													"nodeType": "YulBlock",
													"src": "2534:354:5",
													"statements": [
														{
															"nativeSrc": "2544:27:5",
															"nodeType": "YulAssignment",
															"src": "2544:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2556:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2556:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2567:3:5",
																		"nodeType": "YulLiteral",
																		"src": "2567:3:5",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2552:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2552:3:5"
																},
																"nativeSrc": "2552:19:5",
																"nodeType": "YulFunctionCall",
																"src": "2552:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2544:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2544:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2587:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2587:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2598:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2580:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:5"
																},
																"nativeSrc": "2580:25:5",
																"nodeType": "YulFunctionCall",
																"src": "2580:25:5"
															},
															"nativeSrc": "2580:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "2580:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2625:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2625:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2636:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2636:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2621:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2621:3:5"
																		},
																		"nativeSrc": "2621:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2621:18:5"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2641:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2641:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2614:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:5"
																},
																"nativeSrc": "2614:34:5",
																"nodeType": "YulFunctionCall",
																"src": "2614:34:5"
															},
															"nativeSrc": "2614:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "2614:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2668:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2668:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2679:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2679:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2664:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2664:3:5"
																		},
																		"nativeSrc": "2664:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2664:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2684:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2684:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2657:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2657:6:5"
																},
																"nativeSrc": "2657:34:5",
																"nodeType": "YulFunctionCall",
																"src": "2657:34:5"
															},
															"nativeSrc": "2657:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "2657:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2711:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2711:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2722:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2722:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2707:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:5"
																		},
																		"nativeSrc": "2707:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2707:18:5"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "2727:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2727:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2700:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:5"
																},
																"nativeSrc": "2700:34:5",
																"nodeType": "YulFunctionCall",
																"src": "2700:34:5"
															},
															"nativeSrc": "2700:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "2700:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2754:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2754:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2765:3:5",
																				"nodeType": "YulLiteral",
																				"src": "2765:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2750:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2750:3:5"
																		},
																		"nativeSrc": "2750:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2750:19:5"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "2771:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2771:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2743:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2743:6:5"
																},
																"nativeSrc": "2743:35:5",
																"nodeType": "YulFunctionCall",
																"src": "2743:35:5"
															},
															"nativeSrc": "2743:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "2743:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2798:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2798:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2809:3:5",
																				"nodeType": "YulLiteral",
																				"src": "2809:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2794:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2794:3:5"
																		},
																		"nativeSrc": "2794:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2794:19:5"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "2815:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2815:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2787:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2787:6:5"
																},
																"nativeSrc": "2787:35:5",
																"nodeType": "YulFunctionCall",
																"src": "2787:35:5"
															},
															"nativeSrc": "2787:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "2787:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2842:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2842:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2853:3:5",
																				"nodeType": "YulLiteral",
																				"src": "2853:3:5",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2838:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2838:3:5"
																		},
																		"nativeSrc": "2838:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2838:19:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value6",
																						"nativeSrc": "2873:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2873:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2866:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2866:6:5"
																				},
																				"nativeSrc": "2866:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2866:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2859:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2859:6:5"
																		},
																		"nativeSrc": "2859:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2859:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2831:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:5"
																},
																"nativeSrc": "2831:51:5",
																"nodeType": "YulFunctionCall",
																"src": "2831:51:5"
															},
															"nativeSrc": "2831:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "2831:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "2271:617:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2455:9:5",
														"nodeType": "YulTypedName",
														"src": "2455:9:5",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2466:6:5",
														"nodeType": "YulTypedName",
														"src": "2466:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2474:6:5",
														"nodeType": "YulTypedName",
														"src": "2474:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2482:6:5",
														"nodeType": "YulTypedName",
														"src": "2482:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2490:6:5",
														"nodeType": "YulTypedName",
														"src": "2490:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2498:6:5",
														"nodeType": "YulTypedName",
														"src": "2498:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2506:6:5",
														"nodeType": "YulTypedName",
														"src": "2506:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2514:6:5",
														"nodeType": "YulTypedName",
														"src": "2514:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2525:4:5",
														"nodeType": "YulTypedName",
														"src": "2525:4:5",
														"type": ""
													}
												],
												"src": "2271:617:5"
											},
											{
												"body": {
													"nativeSrc": "2994:102:5",
													"nodeType": "YulBlock",
													"src": "2994:102:5",
													"statements": [
														{
															"nativeSrc": "3004:26:5",
															"nodeType": "YulAssignment",
															"src": "3004:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3016:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3016:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3027:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3027:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3012:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3012:3:5"
																},
																"nativeSrc": "3012:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3012:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3004:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3004:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3046:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3046:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3061:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3061:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3077:3:5",
																								"nodeType": "YulLiteral",
																								"src": "3077:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3082:1:5",
																								"nodeType": "YulLiteral",
																								"src": "3082:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3073:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3073:3:5"
																						},
																						"nativeSrc": "3073:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3073:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3086:1:5",
																						"nodeType": "YulLiteral",
																						"src": "3086:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3069:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3069:3:5"
																				},
																				"nativeSrc": "3069:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3069:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3057:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3057:3:5"
																		},
																		"nativeSrc": "3057:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3057:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3039:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:5"
																},
																"nativeSrc": "3039:51:5",
																"nodeType": "YulFunctionCall",
																"src": "3039:51:5"
															},
															"nativeSrc": "3039:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "3039:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2893:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2963:9:5",
														"nodeType": "YulTypedName",
														"src": "2963:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2974:6:5",
														"nodeType": "YulTypedName",
														"src": "2974:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2985:4:5",
														"nodeType": "YulTypedName",
														"src": "2985:4:5",
														"type": ""
													}
												],
												"src": "2893:203:5"
											},
											{
												"body": {
													"nativeSrc": "3171:216:5",
													"nodeType": "YulBlock",
													"src": "3171:216:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3217:16:5",
																"nodeType": "YulBlock",
																"src": "3217:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3226:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3226:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3229:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3229:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3219:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3219:6:5"
																			},
																			"nativeSrc": "3219:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3219:12:5"
																		},
																		"nativeSrc": "3219:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3219:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3192:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3192:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3201:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3201:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3188:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3188:3:5"
																		},
																		"nativeSrc": "3188:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3213:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3213:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3184:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3184:3:5"
																},
																"nativeSrc": "3184:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3184:32:5"
															},
															"nativeSrc": "3181:52:5",
															"nodeType": "YulIf",
															"src": "3181:52:5"
														},
														{
															"nativeSrc": "3242:36:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3242:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3268:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3268:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3255:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3255:12:5"
																},
																"nativeSrc": "3255:23:5",
																"nodeType": "YulFunctionCall",
																"src": "3255:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3246:5:5",
																	"nodeType": "YulTypedName",
																	"src": "3246:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3341:16:5",
																"nodeType": "YulBlock",
																"src": "3341:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3350:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3350:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3353:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3353:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3343:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3343:6:5"
																			},
																			"nativeSrc": "3343:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3343:12:5"
																		},
																		"nativeSrc": "3343:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3343:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3300:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3300:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3311:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3311:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3326:3:5",
																										"nodeType": "YulLiteral",
																										"src": "3326:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3331:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3331:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3322:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3322:3:5"
																								},
																								"nativeSrc": "3322:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3322:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3335:1:5",
																								"nodeType": "YulLiteral",
																								"src": "3335:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "3318:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3318:3:5"
																						},
																						"nativeSrc": "3318:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3318:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "3307:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3307:3:5"
																				},
																				"nativeSrc": "3307:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3307:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3297:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3297:2:5"
																		},
																		"nativeSrc": "3297:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3297:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3290:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:5"
																},
																"nativeSrc": "3290:50:5",
																"nodeType": "YulFunctionCall",
																"src": "3290:50:5"
															},
															"nativeSrc": "3287:70:5",
															"nodeType": "YulIf",
															"src": "3287:70:5"
														},
														{
															"nativeSrc": "3366:15:5",
															"nodeType": "YulAssignment",
															"src": "3366:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "3376:5:5",
																"nodeType": "YulIdentifier",
																"src": "3376:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3366:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3366:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3101:286:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3137:9:5",
														"nodeType": "YulTypedName",
														"src": "3137:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3148:7:5",
														"nodeType": "YulTypedName",
														"src": "3148:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3160:6:5",
														"nodeType": "YulTypedName",
														"src": "3160:6:5",
														"type": ""
													}
												],
												"src": "3101:286:5"
											},
											{
												"body": {
													"nativeSrc": "3474:122:5",
													"nodeType": "YulBlock",
													"src": "3474:122:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3520:16:5",
																"nodeType": "YulBlock",
																"src": "3520:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3529:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3529:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3532:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3532:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3522:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3522:6:5"
																			},
																			"nativeSrc": "3522:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3522:12:5"
																		},
																		"nativeSrc": "3522:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3522:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3495:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3495:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3504:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3504:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3491:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3491:3:5"
																		},
																		"nativeSrc": "3491:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3491:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3516:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3516:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3487:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3487:3:5"
																},
																"nativeSrc": "3487:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3487:32:5"
															},
															"nativeSrc": "3484:52:5",
															"nodeType": "YulIf",
															"src": "3484:52:5"
														},
														{
															"nativeSrc": "3545:45:5",
															"nodeType": "YulAssignment",
															"src": "3545:45:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3580:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3580:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_enum_Interval",
																	"nativeSrc": "3555:24:5",
																	"nodeType": "YulIdentifier",
																	"src": "3555:24:5"
																},
																"nativeSrc": "3555:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3555:35:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3545:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Interval_$610",
												"nativeSrc": "3392:204:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3440:9:5",
														"nodeType": "YulTypedName",
														"src": "3440:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3451:7:5",
														"nodeType": "YulTypedName",
														"src": "3451:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3463:6:5",
														"nodeType": "YulTypedName",
														"src": "3463:6:5",
														"type": ""
													}
												],
												"src": "3392:204:5"
											},
											{
												"body": {
													"nativeSrc": "3798:844:5",
													"nodeType": "YulBlock",
													"src": "3798:844:5",
													"statements": [
														{
															"nativeSrc": "3808:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3808:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3826:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3826:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3837:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3837:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3822:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3822:3:5"
																},
																"nativeSrc": "3822:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3822:18:5"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "3812:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3812:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3856:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3856:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3867:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3867:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3849:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3849:6:5"
																},
																"nativeSrc": "3849:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3849:21:5"
															},
															"nativeSrc": "3849:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3849:21:5"
														},
														{
															"nativeSrc": "3879:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3879:17:5",
															"value": {
																"name": "tail_1",
																"nativeSrc": "3890:6:5",
																"nodeType": "YulIdentifier",
																"src": "3890:6:5"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "3883:3:5",
																	"nodeType": "YulTypedName",
																	"src": "3883:3:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3905:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3905:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3925:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3925:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3919:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3919:5:5"
																},
																"nativeSrc": "3919:13:5",
																"nodeType": "YulFunctionCall",
																"src": "3919:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3909:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3909:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "3948:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3948:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3956:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3956:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3941:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3941:6:5"
																},
																"nativeSrc": "3941:22:5",
																"nodeType": "YulFunctionCall",
																"src": "3941:22:5"
															},
															"nativeSrc": "3941:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "3941:22:5"
														},
														{
															"nativeSrc": "3972:25:5",
															"nodeType": "YulAssignment",
															"src": "3972:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3983:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3983:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3994:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3979:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3979:3:5"
																},
																"nativeSrc": "3979:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3979:18:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3972:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3972:3:5"
																}
															]
														},
														{
															"nativeSrc": "4006:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4006:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4024:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4024:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4032:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4032:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4020:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4020:3:5"
																},
																"nativeSrc": "4020:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4020:15:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4010:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4010:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4044:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4044:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "4053:1:5",
																"nodeType": "YulLiteral",
																"src": "4053:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4048:1:5",
																	"nodeType": "YulTypedName",
																	"src": "4048:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4112:504:5",
																"nodeType": "YulBlock",
																"src": "4112:504:5",
																"statements": [
																	{
																		"nativeSrc": "4126:23:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4126:23:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4142:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "4142:6:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4136:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4136:5:5"
																			},
																			"nativeSrc": "4136:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4136:13:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "4130:2:5",
																				"nodeType": "YulTypedName",
																				"src": "4130:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4169:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4169:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_1",
																							"nativeSrc": "4180:2:5",
																							"nodeType": "YulIdentifier",
																							"src": "4180:2:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4174:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4174:5:5"
																					},
																					"nativeSrc": "4174:9:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4174:9:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4162:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4162:6:5"
																			},
																			"nativeSrc": "4162:22:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4162:22:5"
																		},
																		"nativeSrc": "4162:22:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4162:22:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "4208:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4208:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4213:2:5",
																							"nodeType": "YulLiteral",
																							"src": "4213:2:5",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4204:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4204:3:5"
																					},
																					"nativeSrc": "4204:12:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4204:12:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "4228:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "4228:2:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4232:2:5",
																									"nodeType": "YulLiteral",
																									"src": "4232:2:5",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4224:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "4224:3:5"
																							},
																							"nativeSrc": "4224:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4224:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4218:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4218:5:5"
																					},
																					"nativeSrc": "4218:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4218:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4197:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4197:6:5"
																			},
																			"nativeSrc": "4197:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4197:40:5"
																		},
																		"nativeSrc": "4197:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4197:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "4261:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4261:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4266:2:5",
																							"nodeType": "YulLiteral",
																							"src": "4266:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4257:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4257:3:5"
																					},
																					"nativeSrc": "4257:12:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:12:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "4281:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "4281:2:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4285:2:5",
																									"nodeType": "YulLiteral",
																									"src": "4285:2:5",
																									"type": "",
																									"value": "64"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4277:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "4277:3:5"
																							},
																							"nativeSrc": "4277:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4277:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4271:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4271:5:5"
																					},
																					"nativeSrc": "4271:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4271:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4250:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4250:6:5"
																			},
																			"nativeSrc": "4250:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4250:40:5"
																		},
																		"nativeSrc": "4250:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4250:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "4314:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4314:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4319:4:5",
																							"nodeType": "YulLiteral",
																							"src": "4319:4:5",
																							"type": "",
																							"value": "0x60"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4310:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4310:3:5"
																					},
																					"nativeSrc": "4310:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4310:14:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "4336:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "4336:2:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4340:4:5",
																									"nodeType": "YulLiteral",
																									"src": "4340:4:5",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4332:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "4332:3:5"
																							},
																							"nativeSrc": "4332:13:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4332:13:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4326:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4326:5:5"
																					},
																					"nativeSrc": "4326:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4326:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4303:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4303:6:5"
																			},
																			"nativeSrc": "4303:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4303:44:5"
																		},
																		"nativeSrc": "4303:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4303:44:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "4371:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4371:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4376:4:5",
																							"nodeType": "YulLiteral",
																							"src": "4376:4:5",
																							"type": "",
																							"value": "0x80"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4367:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4367:3:5"
																					},
																					"nativeSrc": "4367:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4367:14:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "4393:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "4393:2:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4397:4:5",
																									"nodeType": "YulLiteral",
																									"src": "4397:4:5",
																									"type": "",
																									"value": "0x80"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4389:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "4389:3:5"
																							},
																							"nativeSrc": "4389:13:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4389:13:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4383:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4383:5:5"
																					},
																					"nativeSrc": "4383:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4383:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4360:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4360:6:5"
																			},
																			"nativeSrc": "4360:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4360:44:5"
																		},
																		"nativeSrc": "4360:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4360:44:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "4428:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4428:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4433:4:5",
																							"nodeType": "YulLiteral",
																							"src": "4433:4:5",
																							"type": "",
																							"value": "0xa0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4424:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4424:3:5"
																					},
																					"nativeSrc": "4424:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4424:14:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_1",
																									"nativeSrc": "4450:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "4450:2:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4454:4:5",
																									"nodeType": "YulLiteral",
																									"src": "4454:4:5",
																									"type": "",
																									"value": "0xa0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4446:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "4446:3:5"
																							},
																							"nativeSrc": "4446:13:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4446:13:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4440:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4440:5:5"
																					},
																					"nativeSrc": "4440:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4440:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4417:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4417:6:5"
																			},
																			"nativeSrc": "4417:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4417:44:5"
																		},
																		"nativeSrc": "4417:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4417:44:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "4485:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4485:3:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4490:4:5",
																							"nodeType": "YulLiteral",
																							"src": "4490:4:5",
																							"type": "",
																							"value": "0xc0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4481:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4481:3:5"
																					},
																					"nativeSrc": "4481:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4481:14:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "_1",
																													"nativeSrc": "4521:2:5",
																													"nodeType": "YulIdentifier",
																													"src": "4521:2:5"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "4525:4:5",
																													"nodeType": "YulLiteral",
																													"src": "4525:4:5",
																													"type": "",
																													"value": "0xc0"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nativeSrc": "4517:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "4517:3:5"
																											},
																											"nativeSrc": "4517:13:5",
																											"nodeType": "YulFunctionCall",
																											"src": "4517:13:5"
																										}
																									],
																									"functionName": {
																										"name": "mload",
																										"nativeSrc": "4511:5:5",
																										"nodeType": "YulIdentifier",
																										"src": "4511:5:5"
																									},
																									"nativeSrc": "4511:20:5",
																									"nodeType": "YulFunctionCall",
																									"src": "4511:20:5"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "4504:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "4504:6:5"
																							},
																							"nativeSrc": "4504:28:5",
																							"nodeType": "YulFunctionCall",
																							"src": "4504:28:5"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nativeSrc": "4497:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4497:6:5"
																					},
																					"nativeSrc": "4497:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4497:36:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4474:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4474:6:5"
																			},
																			"nativeSrc": "4474:60:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4474:60:5"
																		},
																		"nativeSrc": "4474:60:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4474:60:5"
																	},
																	{
																		"nativeSrc": "4547:21:5",
																		"nodeType": "YulAssignment",
																		"src": "4547:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "4558:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4558:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4563:4:5",
																					"nodeType": "YulLiteral",
																					"src": "4563:4:5",
																					"type": "",
																					"value": "0xe0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4554:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4554:3:5"
																			},
																			"nativeSrc": "4554:14:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4554:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4547:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4547:3:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4581:25:5",
																		"nodeType": "YulAssignment",
																		"src": "4581:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4595:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "4595:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4603:2:5",
																					"nodeType": "YulLiteral",
																					"src": "4603:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4591:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4591:3:5"
																			},
																			"nativeSrc": "4591:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4591:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4581:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4581:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4074:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4074:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4077:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4077:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4071:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4071:2:5"
																},
																"nativeSrc": "4071:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4071:13:5"
															},
															"nativeSrc": "4063:553:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4085:18:5",
																"nodeType": "YulBlock",
																"src": "4085:18:5",
																"statements": [
																	{
																		"nativeSrc": "4087:14:5",
																		"nodeType": "YulAssignment",
																		"src": "4087:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4096:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "4096:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4099:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4099:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4092:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4092:3:5"
																			},
																			"nativeSrc": "4092:9:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4092:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4087:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "4087:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4067:3:5",
																"nodeType": "YulBlock",
																"src": "4067:3:5",
																"statements": []
															},
															"src": "4063:553:5"
														},
														{
															"nativeSrc": "4625:11:5",
															"nodeType": "YulAssignment",
															"src": "4625:11:5",
															"value": {
																"name": "pos",
																"nativeSrc": "4633:3:5",
																"nodeType": "YulIdentifier",
																"src": "4633:3:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4625:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4625:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Candle_$625_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Candle_$625_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "3601:1041:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3767:9:5",
														"nodeType": "YulTypedName",
														"src": "3767:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3778:6:5",
														"nodeType": "YulTypedName",
														"src": "3778:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3789:4:5",
														"nodeType": "YulTypedName",
														"src": "3789:4:5",
														"type": ""
													}
												],
												"src": "3601:1041:5"
											},
											{
												"body": {
													"nativeSrc": "4821:158:5",
													"nodeType": "YulBlock",
													"src": "4821:158:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4838:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4838:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4849:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4849:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4831:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:5"
																},
																"nativeSrc": "4831:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4831:21:5"
															},
															"nativeSrc": "4831:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4831:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4872:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4872:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4883:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4883:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4868:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4868:3:5"
																		},
																		"nativeSrc": "4868:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4868:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4888:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4888:1:5",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4861:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:5"
																},
																"nativeSrc": "4861:29:5",
																"nodeType": "YulFunctionCall",
																"src": "4861:29:5"
															},
															"nativeSrc": "4861:29:5",
															"nodeType": "YulExpressionStatement",
															"src": "4861:29:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4910:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4910:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4921:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4921:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4906:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4906:3:5"
																		},
																		"nativeSrc": "4906:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4906:18:5"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4926:11:5",
																		"nodeType": "YulLiteral",
																		"src": "4926:11:5",
																		"type": "",
																		"value": "Not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4899:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4899:6:5"
																},
																"nativeSrc": "4899:39:5",
																"nodeType": "YulFunctionCall",
																"src": "4899:39:5"
															},
															"nativeSrc": "4899:39:5",
															"nodeType": "YulExpressionStatement",
															"src": "4899:39:5"
														},
														{
															"nativeSrc": "4947:26:5",
															"nodeType": "YulAssignment",
															"src": "4947:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4959:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4959:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4970:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4970:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4955:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4955:3:5"
																},
																"nativeSrc": "4955:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4955:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4947:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4947:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4647:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4798:9:5",
														"nodeType": "YulTypedName",
														"src": "4798:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4812:4:5",
														"nodeType": "YulTypedName",
														"src": "4812:4:5",
														"type": ""
													}
												],
												"src": "4647:332:5"
											},
											{
												"body": {
													"nativeSrc": "5016:95:5",
													"nodeType": "YulBlock",
													"src": "5016:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5033:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5033:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5040:3:5",
																				"nodeType": "YulLiteral",
																				"src": "5040:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5045:10:5",
																				"nodeType": "YulLiteral",
																				"src": "5045:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5036:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5036:3:5"
																		},
																		"nativeSrc": "5036:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5036:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5026:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:5"
																},
																"nativeSrc": "5026:31:5",
																"nodeType": "YulFunctionCall",
																"src": "5026:31:5"
															},
															"nativeSrc": "5026:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "5026:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5073:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5073:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5076:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5076:4:5",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5066:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5066:6:5"
																},
																"nativeSrc": "5066:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5066:15:5"
															},
															"nativeSrc": "5066:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5066:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5097:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5097:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5100:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5100:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5090:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5090:6:5"
																},
																"nativeSrc": "5090:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5090:15:5"
															},
															"nativeSrc": "5090:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5090:15:5"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "4984:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "4984:127:5"
											},
											{
												"body": {
													"nativeSrc": "5290:169:5",
													"nodeType": "YulBlock",
													"src": "5290:169:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5307:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5307:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5318:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5318:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5300:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5300:6:5"
																},
																"nativeSrc": "5300:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5300:21:5"
															},
															"nativeSrc": "5300:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5300:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5341:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5341:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5352:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5352:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5337:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5337:3:5"
																		},
																		"nativeSrc": "5337:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5337:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5357:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5357:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5330:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5330:6:5"
																},
																"nativeSrc": "5330:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5330:30:5"
															},
															"nativeSrc": "5330:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5330:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5380:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5380:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5391:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5391:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5376:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5376:3:5"
																		},
																		"nativeSrc": "5376:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5376:18:5"
																	},
																	{
																		"hexValue": "416c726561647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "5396:21:5",
																		"nodeType": "YulLiteral",
																		"src": "5396:21:5",
																		"type": "",
																		"value": "Already initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5369:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:5"
																},
																"nativeSrc": "5369:49:5",
																"nodeType": "YulFunctionCall",
																"src": "5369:49:5"
															},
															"nativeSrc": "5369:49:5",
															"nodeType": "YulExpressionStatement",
															"src": "5369:49:5"
														},
														{
															"nativeSrc": "5427:26:5",
															"nodeType": "YulAssignment",
															"src": "5427:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5439:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5439:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5450:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5450:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5435:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5435:3:5"
																},
																"nativeSrc": "5435:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5435:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5427:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5427:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5116:343:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5267:9:5",
														"nodeType": "YulTypedName",
														"src": "5267:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5281:4:5",
														"nodeType": "YulTypedName",
														"src": "5281:4:5",
														"type": ""
													}
												],
												"src": "5116:343:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_enum_Interval(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 8)) { revert(0, 0) }\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_enum$_Interval_$610t_struct$_Candle_$625_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        let _1 := sub(dataEnd, headStart)\n        if slt(_1, 256) { revert(0, 0) }\n        value0 := abi_decode_enum_Interval(headStart)\n        if slt(add(_1, not(31)), 0xe0) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xe0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        mstore(64, newFreePtr)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        mstore(memPtr, value)\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        mstore(add(memPtr, 32), value_1)\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 96))\n        mstore(add(memPtr, 64), value_2)\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 128))\n        mstore(add(memPtr, 96), value_3)\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 160))\n        mstore(add(memPtr, 128), value_4)\n        let value_5 := 0\n        value_5 := calldataload(add(headStart, 192))\n        mstore(add(memPtr, 160), value_5)\n        mstore(add(memPtr, 192), abi_decode_bool(add(headStart, 0xe0)))\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_enum$_Interval_$610t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_enum_Interval(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), iszero(iszero(value6)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_Interval_$610(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_enum_Interval(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Candle_$625_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Candle_$625_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _1 := mload(srcPtr)\n            mstore(pos, mload(_1))\n            mstore(add(pos, 32), mload(add(_1, 32)))\n            mstore(add(pos, 64), mload(add(_1, 64)))\n            mstore(add(pos, 0x60), mload(add(_1, 0x60)))\n            mstore(add(pos, 0x80), mload(add(_1, 0x80)))\n            mstore(add(pos, 0xa0), mload(add(_1, 0xa0)))\n            mstore(add(pos, 0xc0), iszero(iszero(mload(add(_1, 0xc0)))))\n            pos := add(pos, 0xe0)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Already initialized\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610060575f3560e01c8063158ef93e146100645780632dd1afc514610086578063317650ac1461009b5780638da5cb5b146100e5578063c4d66de81461010f578063d0198d2f14610122575b5f5ffd5b6002546100719060ff1681565b60405190151581526020015b60405180910390f35b6100996100943660046103f6565b610142565b005b6100ae6100a93660046104b6565b61022f565b604080519788526020880196909652948601939093526060850191909152608084015260a0830152151560c082015260e00161007d565b5f546100f7906001600160a01b031681565b6040516001600160a01b03909116815260200161007d565b61009961011d3660046104de565b610288565b61013561013036600461050b565b6102ff565b60405161007d9190610524565b5f546001600160a01b0316331461018c5760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b60015f8360078111156101a1576101a16105ac565b60078111156101b2576101b26105ac565b815260208082019290925260409081015f90812080546001808201835591835291849020855160079093020191825592840151928101929092558201516002820155606082015160038201556080820151600482015560a0820151600582015560c0909101516006909101805460ff191691151591909117905550565b6001602052815f5260405f208181548110610248575f80fd5b5f91825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601549497509295509093909260ff1687565b60025460ff16156102d15760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610183565b5f80546001600160a01b0319166001600160a01b03929092169190911790556002805460ff19166001179055565b606060015f836007811115610316576103166105ac565b6007811115610327576103276105ac565b81526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b828210156103c9575f8481526020908190206040805160e0810182526007860290920180548352600180820154848601526002820154928401929092526003810154606084015260048101546080840152600581015460a08401526006015460ff16151560c08301529083529092019101610353565b505050509050919050565b8035600881106103e2575f5ffd5b919050565b803580151581146103e2575f5ffd5b5f5f828403610100811215610409575f5ffd5b610412846103d4565b925060e0601f1982011215610425575f5ffd5b5060405160e0810181811067ffffffffffffffff8211171561045557634e487b7160e01b5f52604160045260245ffd5b604090815260208581013583528582013590830152606080860135918301919091526080808601359183019190915260a0808601359183019190915260c0850135908201526104a660e085016103e7565b60c0820152809150509250929050565b5f5f604083850312156104c7575f5ffd5b6104d0836103d4565b946020939093013593505050565b5f602082840312156104ee575f5ffd5b81356001600160a01b0381168114610504575f5ffd5b9392505050565b5f6020828403121561051b575f5ffd5b610504826103d4565b602080825282518282018190525f918401906040840190835b818110156105a1578351805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c0810151151560c08501525060e08301925060208401935060018101905061053d565b509095945050505050565b634e487b7160e01b5f52602160045260245ffdfea264697066735822122098fbbad1ec8b8fa0b4df90ea74e764624674d8ae16962f298ae9d3103aa2825264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x158EF93E EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x2DD1AFC5 EQ PUSH2 0x86 JUMPI DUP1 PUSH4 0x317650AC EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xD0198D2F EQ PUSH2 0x122 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x71 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH2 0x94 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0xA9 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x7D JUMP JUMPDEST PUSH0 SLOAD PUSH2 0xF7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7D JUMP JUMPDEST PUSH2 0x99 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x50B JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x524 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x2737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1A1 JUMPI PUSH2 0x1A1 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x1B2 JUMPI PUSH2 0x1B2 PUSH2 0x5AC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP6 MLOAD PUSH1 0x7 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP3 DUP5 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x248 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP8 POP SWAP3 SWAP6 POP SWAP1 SWAP4 SWAP1 SWAP3 PUSH1 0xFF AND DUP8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH0 DUP4 PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x316 JUMPI PUSH2 0x316 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x7 DUP2 GT ISZERO PUSH2 0x327 JUMPI PUSH2 0x327 PUSH2 0x5AC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x3C9 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x7 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x353 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x8 DUP2 LT PUSH2 0x3E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP3 DUP5 SUB PUSH2 0x100 DUP2 SLT ISZERO PUSH2 0x409 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x412 DUP5 PUSH2 0x3D4 JUMP JUMPDEST SWAP3 POP PUSH1 0xE0 PUSH1 0x1F NOT DUP3 ADD SLT ISZERO PUSH2 0x425 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x455 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 ADD CALLDATALOAD DUP4 MSTORE DUP6 DUP3 ADD CALLDATALOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD CALLDATALOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP1 DUP7 ADD CALLDATALOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 DUP1 DUP7 ADD CALLDATALOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP6 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x4A6 PUSH1 0xE0 DUP6 ADD PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4D0 DUP4 PUSH2 0x3D4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x504 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x504 DUP3 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5A1 JUMPI DUP4 MLOAD DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE POP PUSH1 0xE0 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x53D JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 EXTSTATICCALL 0xBA DATALOADN 0xEC8B DUP16 LOG0 0xB4 0xDF SWAP1 0xEA PUSH21 0xE764624674D8AE16962F298AE9D3103AA282526473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "61:965:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:23;;;;;;;;;;;;179:14:5;;172:22;154:41;;142:2;127:18;462:23:4;;;;;;;;765:128;;;;;;:::i;:::-;;:::i;:::-;;409:44;;;;;;:::i;:::-;;:::i;:::-;;;;2580:25:5;;;2636:2;2621:18;;2614:34;;;;2664:18;;;2657:34;;;;2722:2;2707:18;;2700:34;;;;2765:3;2750:19;;2743:35;2809:3;2794:19;;2787:35;2866:14;2859:22;2853:3;2838:19;;2831:51;2567:3;2552:19;409:44:4;2271:617:5;90:20:4;;;;;-1:-1:-1;;;;;90:20:4;;;;;;-1:-1:-1;;;;;3057:32:5;;;3039:51;;3027:2;3012:18;90:20:4;2893:203:5;595:162:4;;;;;;:::i;:::-;;:::i;901:122::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;765:128::-;548:5;;-1:-1:-1;;;;;548:5:4;534:10;:19;526:41;;;;-1:-1:-1;;;526:41:4;;4849:2:5;526:41:4;;;4831:21:5;4888:1;4868:18;;;4861:29;-1:-1:-1;;;4906:18:5;;;4899:39;4955:18;;526:41:4;;;;;;;;;855:7:::1;:17;863:8;855:17;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;855:17:4;;;:30;;::::1;::::0;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;;::::0;;;;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;855:30:4::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;765:128:4:o;409:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;409:44:4;;-1:-1:-1;409:44:4;;;;;;;:::o;595:162::-;660:11;;;;659:12;651:44;;;;-1:-1:-1;;;651:44:4;;5318:2:5;651:44:4;;;5300:21:5;5357:2;5337:18;;;5330:30;-1:-1:-1;;;5376:18:5;;;5369:49;5435:18;;651:44:4;5116:343:5;651:44:4;706:5;:14;;-1:-1:-1;;;;;;706:14:4;-1:-1:-1;;;;;706:14:4;;;;;;;;;;731:11;:18;;-1:-1:-1;;731:18:4;-1:-1:-1;731:18:4;;;595:162::o;901:122::-;963:15;998:7;:17;1006:8;998:17;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;991:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:122;;;:::o;206:149:5:-;280:20;;329:1;319:12;;309:40;;345:1;342;335:12;309:40;206:149;;;:::o;360:160::-;425:20;;481:13;;474:21;464:32;;454:60;;510:1;507;500:12;525:1418;628:6;636;680:9;671:7;667:23;710:3;706:2;702:12;699:32;;;727:1;724;717:12;699:32;750:35;775:9;750:35;:::i;:::-;740:45;-1:-1:-1;819:4:5;-1:-1:-1;;801:16:5;;797:27;794:47;;;837:1;834;827:12;794:47;;870:2;864:9;912:4;904:6;900:17;983:6;971:10;968:22;947:18;935:10;932:34;929:62;926:185;;;1033:10;1028:3;1024:20;1021:1;1014:31;1068:4;1065:1;1058:15;1096:4;1093:1;1086:15;926:185;1127:2;1120:22;;;1211:2;1196:18;;;1183:32;1224:21;;1303:18;;;1290:32;1338:15;;;1331:32;1436:2;1421:18;;;1408:32;1456:15;;;1449:32;;;;1554:3;1539:19;;;1526:33;1575:15;;;1568:32;;;;1673:3;1658:19;;;1645:33;1694:16;;;1687:33;;;;1793:3;1778:19;;1765:33;1814:16;;;1807:33;1874:37;1905:4;1890:20;;1874:37;:::i;:::-;1868:3;1860:6;1856:16;1849:63;1931:6;1921:16;;;525:1418;;;;;:::o;1948:318::-;2028:6;2036;2089:2;2077:9;2068:7;2064:23;2060:32;2057:52;;;2105:1;2102;2095:12;2057:52;2128:35;2153:9;2128:35;:::i;:::-;2118:45;2232:2;2217:18;;;;2204:32;;-1:-1:-1;;;1948:318:5:o;3101:286::-;3160:6;3213:2;3201:9;3192:7;3188:23;3184:32;3181:52;;;3229:1;3226;3219:12;3181:52;3255:23;;-1:-1:-1;;;;;3307:31:5;;3297:42;;3287:70;;3353:1;3350;3343:12;3287:70;3376:5;3101:286;-1:-1:-1;;;3101:286:5:o;3392:204::-;3463:6;3516:2;3504:9;3495:7;3491:23;3487:32;3484:52;;;3532:1;3529;3522:12;3484:52;3555:35;3580:9;3555:35;:::i;3601:1041::-;3837:2;3849:21;;;3919:13;;3822:18;;;3941:22;;;3789:4;;4020:15;;;3994:2;3979:18;;;3789:4;4063:553;4077:6;4074:1;4071:13;4063:553;;;4142:6;4136:13;4180:2;4174:9;4169:3;4162:22;4232:2;4228;4224:11;4218:18;4213:2;4208:3;4204:12;4197:40;4285:2;4281;4277:11;4271:18;4266:2;4261:3;4257:12;4250:40;4340:4;4336:2;4332:13;4326:20;4319:4;4314:3;4310:14;4303:44;4397:4;4393:2;4389:13;4383:20;4376:4;4371:3;4367:14;4360:44;4454:4;4450:2;4446:13;4440:20;4433:4;4428:3;4424:14;4417:44;4525:4;4521:2;4517:13;4511:20;4504:28;4497:36;4490:4;4485:3;4481:14;4474:60;;4563:4;4558:3;4554:14;4547:21;;4603:2;4595:6;4591:15;4581:25;;4099:1;4096;4092:9;4087:14;;4063:553;;;-1:-1:-1;4633:3:5;;3601:1041;-1:-1:-1;;;;;3601:1041:5:o;4984:127::-;5045:10;5040:3;5036:20;5033:1;5026:31;5076:4;5073:1;5066:15;5100:4;5097:1;5090:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "305200",
								"executionCost": "341",
								"totalCost": "305541"
							},
							"external": {
								"addCandle(uint8,(uint256,uint256,uint256,uint256,uint256,uint256,bool))": "infinite",
								"candles(uint8,uint256)": "17567",
								"getCandles(uint8)": "infinite",
								"initialize(address)": "50949",
								"initialized()": "2276",
								"owner()": "2379"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 1026,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 1026,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098fbbad1ec8b8fa0b4df90ea74e764624674d8ae16962f298ae9d3103aa2825264736f6c634300081e0033",
									".code": [
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "158EF93E"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "2DD1AFC5"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "317650AC"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "C4D66DE8"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "D0198D2F"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 1026,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 462,
											"end": 485,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 485,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 462,
											"end": 485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 462,
											"end": 485,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 462,
											"end": 485,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 485,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 179,
											"end": 193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 154,
											"end": 195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 462,
											"end": 485,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 462,
											"end": 485,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 485,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 462,
											"end": 485,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 765,
											"end": 893,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 765,
											"end": 893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 765,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 765,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 765,
											"end": 893,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 765,
											"end": 893,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 765,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 765,
											"end": 893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 765,
											"end": 893,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 765,
											"end": 893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 765,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 765,
											"end": 893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 765,
											"end": 893,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 765,
											"end": 893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 765,
											"end": 893,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 409,
											"end": 453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2605,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2636,
											"end": 2638,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2682,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2682,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2682,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2657,
											"end": 2691,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2657,
											"end": 2691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2657,
											"end": 2691,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2657,
											"end": 2691,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2722,
											"end": 2724,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2725,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2734,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2734,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2734,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2750,
											"end": 2769,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2750,
											"end": 2769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2778,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2812,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2822,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2880,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 2881,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2856,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 2838,
											"end": 2857,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2838,
											"end": 2857,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2831,
											"end": 2882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2552,
											"end": 2571,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2271,
											"end": 2888,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 110,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 90,
											"end": 110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 90,
											"end": 110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 110,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 90,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 90,
											"end": 110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 90,
											"end": 110,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 90,
											"end": 110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 90,
											"end": 110,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 110,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 90,
											"end": 110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 90,
											"end": 110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 110,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3057,
											"end": 3089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3039,
											"end": 3090,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3029,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3012,
											"end": 3030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 90,
											"end": 110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2893,
											"end": 3096,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 757,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 595,
											"end": 757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 595,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 595,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 595,
											"end": 757,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 595,
											"end": 757,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 595,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 595,
											"end": 757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 595,
											"end": 757,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 595,
											"end": 757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 595,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 595,
											"end": 757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 901,
											"end": 1023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 901,
											"end": 1023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 901,
											"end": 1023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 765,
											"end": 893,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 765,
											"end": 893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 548,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 548,
											"end": 553,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 534,
											"end": 544,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 534,
											"end": 553,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 526,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 526,
											"end": 567,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 526,
											"end": 567,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 567,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 526,
											"end": 567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 526,
											"end": 567,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4849,
											"end": 4851,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 567,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 526,
											"end": 567,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 526,
											"end": 567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 4852,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4889,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4861,
											"end": 4890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4924,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4899,
											"end": 4938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4955,
											"end": 4973,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4955,
											"end": 4973,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 526,
											"end": 567,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 526,
											"end": 567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 526,
											"end": 567,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 567,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 526,
											"end": 567,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 526,
											"end": 567,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 526,
											"end": 567,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 526,
											"end": 567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 526,
											"end": 567,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 526,
											"end": 567,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 526,
											"end": 567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 855,
											"end": 862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 871,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 855,
											"end": 872,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 855,
											"end": 872,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 855,
											"end": 872,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 872,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 885,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 409,
											"end": 453,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 409,
											"end": 453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 595,
											"end": 757,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 595,
											"end": 757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 660,
											"end": 671,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 660,
											"end": 671,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 660,
											"end": 671,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 660,
											"end": 671,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 659,
											"end": 671,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 651,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 651,
											"end": 695,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 651,
											"end": 695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 651,
											"end": 695,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5318,
											"end": 5320,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 651,
											"end": 695,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5300,
											"end": 5321,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5359,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 5337,
											"end": 5355,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5337,
											"end": 5355,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5337,
											"end": 5355,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5369,
											"end": 5418,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 651,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5116,
											"end": 5459,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 651,
											"end": 695,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 706,
											"end": 711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 720,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 706,
											"end": 720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 706,
											"end": 720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 706,
											"end": 720,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 706,
											"end": 720,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 731,
											"end": 742,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 731,
											"end": 749,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 731,
											"end": 749,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 731,
											"end": 749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 731,
											"end": 749,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 731,
											"end": 749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 731,
											"end": 749,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 595,
											"end": 757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 963,
											"end": 978,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 998,
											"end": 1005,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1014,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 998,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 998,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1015,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 991,
											"end": 1015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 901,
											"end": 1023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 206,
											"end": 355,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 206,
											"end": 355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 280,
											"end": 300,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 280,
											"end": 300,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 329,
											"end": 330,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 319,
											"end": 331,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 319,
											"end": 331,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 309,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 309,
											"end": 349,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 345,
											"end": 346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 343,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 347,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 309,
											"end": 349,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 309,
											"end": 349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 355,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 206,
											"end": 355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 206,
											"end": 355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 206,
											"end": 355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 360,
											"end": 520,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 360,
											"end": 520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 425,
											"end": 445,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 425,
											"end": 445,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 481,
											"end": 494,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 481,
											"end": 494,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 474,
											"end": 495,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 464,
											"end": 496,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 464,
											"end": 496,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 454,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 454,
											"end": 514,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 510,
											"end": 511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 512,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 525,
											"end": 1943,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 525,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 628,
											"end": 634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 671,
											"end": 678,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 667,
											"end": 690,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 710,
											"end": 713,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 706,
											"end": 708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 702,
											"end": 714,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 699,
											"end": 731,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 699,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 699,
											"end": 731,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 727,
											"end": 728,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 729,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 699,
											"end": 731,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 699,
											"end": 731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 750,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 775,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 750,
											"end": 785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 750,
											"end": 785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 750,
											"end": 785,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 750,
											"end": 785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 740,
											"end": 785,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 819,
											"end": 823,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 801,
											"end": 817,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 801,
											"end": 817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 797,
											"end": 824,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 794,
											"end": 841,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 794,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 794,
											"end": 841,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 837,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 839,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 794,
											"end": 841,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 794,
											"end": 841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 794,
											"end": 841,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 870,
											"end": 872,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 873,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 904,
											"end": 910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 900,
											"end": 917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 983,
											"end": 989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 971,
											"end": 981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 968,
											"end": 990,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 947,
											"end": 965,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 932,
											"end": 966,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 929,
											"end": 991,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 926,
											"end": 1111,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 926,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 926,
											"end": 1111,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1043,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1028,
											"end": 1031,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1024,
											"end": 1044,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1068,
											"end": 1072,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1058,
											"end": 1073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1100,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1101,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 926,
											"end": 1111,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 926,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1129,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1214,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1215,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1245,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1321,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1322,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1353,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1353,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1331,
											"end": 1363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1438,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1440,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1471,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1471,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1471,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1449,
											"end": 1481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1539,
											"end": 1558,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1539,
											"end": 1558,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1539,
											"end": 1558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1526,
											"end": 1559,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1590,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1590,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1590,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1676,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1658,
											"end": 1677,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1677,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1677,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1678,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1710,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1720,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1796,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 1778,
											"end": 1797,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1797,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1798,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1814,
											"end": 1830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1814,
											"end": 1830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1814,
											"end": 1830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1905,
											"end": 1909,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1890,
											"end": 1910,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1910,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1874,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1911,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1874,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1871,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 1860,
											"end": 1866,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 1937,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 1937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 1937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 1943,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 525,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 1943,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 525,
											"end": 1943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 1943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2266,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1948,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2075,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2087,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2092,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2107,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2057,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2153,
											"end": 2162,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2128,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2163,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2128,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2234,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1948,
											"end": 2266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3101,
											"end": 3387,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3101,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3215,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3192,
											"end": 3199,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3211,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3184,
											"end": 3216,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3233,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3181,
											"end": 3233,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3231,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3233,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3181,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3278,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3278,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3307,
											"end": 3338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3338,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3339,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3339,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3287,
											"end": 3357,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3351,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3355,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3357,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3287,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3381,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3101,
											"end": 3387,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3101,
											"end": 3387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3392,
											"end": 3596,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3392,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3518,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3504,
											"end": 3513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3502,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3487,
											"end": 3519,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3536,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3484,
											"end": 3536,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3533,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3534,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3536,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3484,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3580,
											"end": 3589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3555,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 4642,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3601,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3839,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3849,
											"end": 3870,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3849,
											"end": 3870,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3849,
											"end": 3870,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3963,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3963,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3963,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4063,
											"end": 4616,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4063,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4077,
											"end": 4083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4074,
											"end": 4075,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4084,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4063,
											"end": 4616,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4063,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4063,
											"end": 4616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4149,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4182,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4174,
											"end": 4183,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4169,
											"end": 4172,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4184,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4232,
											"end": 4234,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4228,
											"end": 4230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4224,
											"end": 4235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4236,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4208,
											"end": 4211,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4197,
											"end": 4237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4285,
											"end": 4287,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4281,
											"end": 4283,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4288,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4289,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4266,
											"end": 4268,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4261,
											"end": 4264,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4269,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4290,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4340,
											"end": 4344,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4346,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4319,
											"end": 4323,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4314,
											"end": 4317,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4347,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4401,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4393,
											"end": 4395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4389,
											"end": 4402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4383,
											"end": 4403,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4380,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4371,
											"end": 4374,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4367,
											"end": 4381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4404,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4450,
											"end": 4452,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4459,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4440,
											"end": 4460,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4437,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4428,
											"end": 4431,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4424,
											"end": 4438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4417,
											"end": 4461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4525,
											"end": 4529,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4521,
											"end": 4523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4530,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4531,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4504,
											"end": 4532,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4497,
											"end": 4533,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4494,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4485,
											"end": 4488,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4474,
											"end": 4534,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4474,
											"end": 4534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4554,
											"end": 4568,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4568,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4603,
											"end": 4605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4591,
											"end": 4606,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4606,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4100,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4096,
											"end": 4097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 4101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4063,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4063,
											"end": 4616,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4063,
											"end": 4616,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4063,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4633,
											"end": 4636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4636,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 4642,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3601,
											"end": 4642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5111,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4984,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5040,
											"end": 5043,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5036,
											"end": 5056,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5033,
											"end": 5034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5057,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5076,
											"end": 5080,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 5073,
											"end": 5074,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5066,
											"end": 5081,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5100,
											"end": 5104,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5097,
											"end": 5098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5105,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Create2.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/KlineFactory.sol",
								"contracts/KlineStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addCandle(uint8,(uint256,uint256,uint256,uint256,uint256,uint256,bool))": "2dd1afc5",
							"candles(uint8,uint256)": "317650ac",
							"getCandles(uint8)": "d0198d2f",
							"initialize(address)": "c4d66de8",
							"initialized()": "158ef93e",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum KlineStorage.Interval\",\"name\":\"interval\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"openTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"open\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"high\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"low\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"close\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isClosed\",\"type\":\"bool\"}],\"internalType\":\"struct KlineStorage.Candle\",\"name\":\"candle\",\"type\":\"tuple\"}],\"name\":\"addCandle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum KlineStorage.Interval\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"openTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"open\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"high\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"low\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"close\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isClosed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum KlineStorage.Interval\",\"name\":\"interval\",\"type\":\"uint8\"}],\"name\":\"getCandles\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"openTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"open\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"high\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"low\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"close\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isClosed\",\"type\":\"bool\"}],\"internalType\":\"struct KlineStorage.Candle[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KlineStorage.sol\":\"KlineStorage\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/KlineStorage.sol\":{\"keccak256\":\"0x99b7ba94f4c8452c1fd35ca8ebad789510f84c38fdee424f6d05319b92fce40d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abe08dd427581ba3f93df838dda4489e747ca181b0355b7623b256976c292f85\",\"dweb:/ipfs/Qmf4UxWzusdumGppYdgCXZbCsnqFcAmAQTGzUzKyvn9zDb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 601,
								"contract": "contracts/KlineStorage.sol:KlineStorage",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 632,
								"contract": "contracts/KlineStorage.sol:KlineStorage",
								"label": "candles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_enum(Interval)610,t_array(t_struct(Candle)625_storage)dyn_storage)"
							},
							{
								"astId": 634,
								"contract": "contracts/KlineStorage.sol:KlineStorage",
								"label": "initialized",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Candle)625_storage)dyn_storage": {
								"base": "t_struct(Candle)625_storage",
								"encoding": "dynamic_array",
								"label": "struct KlineStorage.Candle[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(Interval)610": {
								"encoding": "inplace",
								"label": "enum KlineStorage.Interval",
								"numberOfBytes": "1"
							},
							"t_mapping(t_enum(Interval)610,t_array(t_struct(Candle)625_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_enum(Interval)610",
								"label": "mapping(enum KlineStorage.Interval => struct KlineStorage.Candle[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Candle)625_storage)dyn_storage"
							},
							"t_struct(Candle)625_storage": {
								"encoding": "inplace",
								"label": "struct KlineStorage.Candle",
								"members": [
									{
										"astId": 612,
										"contract": "contracts/KlineStorage.sol:KlineStorage",
										"label": "openTime",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 614,
										"contract": "contracts/KlineStorage.sol:KlineStorage",
										"label": "open",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 616,
										"contract": "contracts/KlineStorage.sol:KlineStorage",
										"label": "high",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 618,
										"contract": "contracts/KlineStorage.sol:KlineStorage",
										"label": "low",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 620,
										"contract": "contracts/KlineStorage.sol:KlineStorage",
										"label": "close",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 622,
										"contract": "contracts/KlineStorage.sol:KlineStorage",
										"label": "volume",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 624,
										"contract": "contracts/KlineStorage.sol:KlineStorage",
										"label": "isClosed",
										"offset": 0,
										"slot": "6",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
							"file": "../utils/Create2.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 498,
							"src": "126:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Create2",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 497,
										"src": "134:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "../utils/Errors.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 520,
							"src": "172:43:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "180:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "217:599:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."
							},
							"fullyImplemented": true,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "Clones",
							"nameLocation": "825:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "94289054",
									"id": 8,
									"name": "CloneArgumentsTooLong",
									"nameLocation": "844:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:2:0"
									},
									"src": "838:30:0"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "1145:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 17,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1168:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 16,
														"name": "clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															22,
															67
														],
														"referencedDeclaration": 67,
														"src": "1162:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,uint256) returns (address)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1162:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 15,
												"id": 20,
												"nodeType": "Return",
												"src": "1155:31:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "874:191:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1079:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1093:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1085:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:24:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1135:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1127:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1126:18:0"
									},
									"scope": 398,
									"src": "1070:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1675:820:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 34,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1697:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1689:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 32,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1689:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1689:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1703:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1689:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 37,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1713:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1689:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "1685:123:0",
												"trueBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "1720:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 44,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1776:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 43,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1768:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 42,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1768:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 45,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1768:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1782:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1768:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 47,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1791:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 39,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1741:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1748:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "1741:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1741:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 49,
															"nodeType": "RevertStatement",
															"src": "1734:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1842:553:0",
													"nodeType": "YulBlock",
													"src": "1842:553:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2047:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2047:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2060:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2060:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2070:4:0",
																								"nodeType": "YulLiteral",
																								"src": "2070:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "2076:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "2076:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2066:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "2066:3:0"
																						},
																						"nativeSrc": "2066:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "2066:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "2056:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2056:3:0"
																				},
																				"nativeSrc": "2056:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2056:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2094:48:0",
																				"nodeType": "YulLiteral",
																				"src": "2094:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2053:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2053:2:0"
																		},
																		"nativeSrc": "2053:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2053:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2040:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:0"
																},
																"nativeSrc": "2040:104:0",
																"nodeType": "YulFunctionCall",
																"src": "2040:104:0"
															},
															"nativeSrc": "2040:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "2040:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2265:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2265:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2278:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2278:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2284:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "2284:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2274:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2274:3:0"
																				},
																				"nativeSrc": "2274:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2274:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2301:32:0",
																				"nodeType": "YulLiteral",
																				"src": "2301:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2271:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2271:2:0"
																		},
																		"nativeSrc": "2271:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2271:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2258:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:0"
																},
																"nativeSrc": "2258:77:0",
																"nodeType": "YulFunctionCall",
																"src": "2258:77:0"
															},
															"nativeSrc": "2258:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "2258:77:0"
														},
														{
															"nativeSrc": "2348:37:0",
															"nodeType": "YulAssignment",
															"src": "2348:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2367:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "2367:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2374:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2374:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2380:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2380:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "2360:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2360:6:0"
																},
																"nativeSrc": "2360:25:0",
																"nodeType": "YulFunctionCall",
																"src": "2360:25:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "2348:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "2348:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2076:14:0",
														"valueSize": 1
													},
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2284:14:0",
														"valueSize": 1
													},
													{
														"declaration": 30,
														"isOffset": false,
														"isSlot": false,
														"src": "2348:8:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "2367:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 52,
												"nodeType": "InlineAssembly",
												"src": "1817:578:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 53,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2408:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2428:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 54,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2420:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2420:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2408:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "IfStatement",
												"src": "2404:85:0",
												"trueBody": {
													"id": 64,
													"nodeType": "Block",
													"src": "2432:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 59,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2453:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2460:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "2453:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2453:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 63,
															"nodeType": "RevertStatement",
															"src": "2446:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1199:381:0",
										"text": " @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1594:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1608:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1600:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1632:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1624:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1599:39:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1665:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1657:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1656:18:0"
									},
									"scope": 398,
									"src": "1585:910:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "2972:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 78,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "3008:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 79,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3024:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3030:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 77,
														"name": "cloneDeterministic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															84,
															131
														],
														"referencedDeclaration": 131,
														"src": "2989:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes32,uint256) returns (address)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2989:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 76,
												"id": 82,
												"nodeType": "Return",
												"src": "2982:50:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2501:364:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple times will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2879:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2906:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2898:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2930:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2922:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 71,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:38:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2962:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2954:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2953:18:0"
									},
									"scope": 398,
									"src": "2870:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3612:827:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 98,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3634:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3626:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 96,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3626:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3626:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3640:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3626:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 101,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "3650:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3626:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"nodeType": "IfStatement",
												"src": "3622:123:0",
												"trueBody": {
													"id": 114,
													"nodeType": "Block",
													"src": "3657:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 108,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3713:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3705:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 106,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3705:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3705:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3719:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3705:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 111,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "3728:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 103,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "3678:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3685:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "3678:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3678:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 113,
															"nodeType": "RevertStatement",
															"src": "3671:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "3779:560:0",
													"nodeType": "YulBlock",
													"src": "3779:560:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3984:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3984:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3997:4:0",
																						"nodeType": "YulLiteral",
																						"src": "3997:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4007:4:0",
																								"nodeType": "YulLiteral",
																								"src": "4007:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "4013:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "4013:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4003:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "4003:3:0"
																						},
																						"nativeSrc": "4003:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "4003:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "3993:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3993:3:0"
																				},
																				"nativeSrc": "3993:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3993:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4031:48:0",
																				"nodeType": "YulLiteral",
																				"src": "4031:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3990:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "3990:2:0"
																		},
																		"nativeSrc": "3990:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3990:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3977:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:0"
																},
																"nativeSrc": "3977:104:0",
																"nodeType": "YulFunctionCall",
																"src": "3977:104:0"
															},
															"nativeSrc": "3977:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "3977:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4202:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4202:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4215:4:0",
																						"nodeType": "YulLiteral",
																						"src": "4215:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "4221:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "4221:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4211:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4211:3:0"
																				},
																				"nativeSrc": "4211:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4211:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4238:32:0",
																				"nodeType": "YulLiteral",
																				"src": "4238:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4208:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "4208:2:0"
																		},
																		"nativeSrc": "4208:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4208:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4195:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:0"
																},
																"nativeSrc": "4195:77:0",
																"nodeType": "YulFunctionCall",
																"src": "4195:77:0"
															},
															"nativeSrc": "4195:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "4195:77:0"
														},
														{
															"nativeSrc": "4285:44:0",
															"nodeType": "YulAssignment",
															"src": "4285:44:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4305:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "4305:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4312:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4312:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4318:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4318:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4324:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4324:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "4297:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "4297:7:0"
																},
																"nativeSrc": "4297:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4297:32:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "4285:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "4285:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4013:14:0",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4221:14:0",
														"valueSize": 1
													},
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "4285:8:0",
														"valueSize": 1
													},
													{
														"declaration": 89,
														"isOffset": false,
														"isSlot": false,
														"src": "4324:4:0",
														"valueSize": 1
													},
													{
														"declaration": 91,
														"isOffset": false,
														"isSlot": false,
														"src": "4305:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 116,
												"nodeType": "InlineAssembly",
												"src": "3754:585:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 117,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "4352:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4372:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4364:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4364:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4352:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "4348:85:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "4376:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 123,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "4397:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4404:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "4397:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4397:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "4390:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3045:415:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "3474:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3510:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3502:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3542:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3534:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 88,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3564:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3556:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:83:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "3602:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3594:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3593:18:0"
									},
									"scope": 398,
									"src": "3465:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "4714:537:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4749:496:0",
													"nodeType": "YulBlock",
													"src": "4749:496:0",
													"statements": [
														{
															"nativeSrc": "4763:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4763:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4780:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4780:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4774:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "4774:5:0"
																},
																"nativeSrc": "4774:11:0",
																"nodeType": "YulFunctionCall",
																"src": "4774:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "4767:3:0",
																	"nodeType": "YulTypedName",
																	"src": "4767:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4809:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4809:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4814:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4814:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4805:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4805:3:0"
																		},
																		"nativeSrc": "4805:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4805:14:0"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4821:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "4821:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4798:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:0"
																},
																"nativeSrc": "4798:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4798:32:0"
															},
															"nativeSrc": "4798:32:0",
															"nodeType": "YulExpressionStatement",
															"src": "4798:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4854:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4854:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4859:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4859:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4850:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:0"
																		},
																		"nativeSrc": "4850:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4850:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4866:34:0",
																		"nodeType": "YulLiteral",
																		"src": "4866:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4843:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:0"
																},
																"nativeSrc": "4843:58:0",
																"nodeType": "YulFunctionCall",
																"src": "4843:58:0"
															},
															"nativeSrc": "4843:58:0",
															"nodeType": "YulExpressionStatement",
															"src": "4843:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4925:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4925:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4930:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4930:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4921:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4921:3:0"
																		},
																		"nativeSrc": "4921:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4921:14:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "4937:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "4937:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4914:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:0"
																},
																"nativeSrc": "4914:38:0",
																"nodeType": "YulFunctionCall",
																"src": "4914:38:0"
															},
															"nativeSrc": "4914:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "4914:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4972:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4977:42:0",
																		"nodeType": "YulLiteral",
																		"src": "4977:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4965:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:0"
																},
																"nativeSrc": "4965:55:0",
																"nodeType": "YulFunctionCall",
																"src": "4965:55:0"
															},
															"nativeSrc": "4965:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "4965:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5044:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5044:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5049:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5049:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5040:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5040:3:0"
																		},
																		"nativeSrc": "5040:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5040:14:0"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "5056:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "5056:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5033:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5033:6:0"
																},
																"nativeSrc": "5033:28:0",
																"nodeType": "YulFunctionCall",
																"src": "5033:28:0"
															},
															"nativeSrc": "5033:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "5033:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5085:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5085:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5090:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5090:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5081:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5081:3:0"
																		},
																		"nativeSrc": "5081:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5081:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5111:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5111:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5116:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5116:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5107:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5107:3:0"
																				},
																				"nativeSrc": "5107:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5107:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5123:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5123:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5097:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5097:9:0"
																		},
																		"nativeSrc": "5097:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5097:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5074:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5074:6:0"
																},
																"nativeSrc": "5074:55:0",
																"nodeType": "YulFunctionCall",
																"src": "5074:55:0"
															},
															"nativeSrc": "5074:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "5074:55:0"
														},
														{
															"nativeSrc": "5142:93:0",
															"nodeType": "YulAssignment",
															"src": "5142:93:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5173:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5173:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5178:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5178:4:0",
																						"type": "",
																						"value": "0x43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5169:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5169:3:0"
																				},
																				"nativeSrc": "5169:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5169:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5185:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5185:4:0",
																				"type": "",
																				"value": "0x55"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5159:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5159:9:0"
																		},
																		"nativeSrc": "5159:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5159:31:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5192:42:0",
																		"nodeType": "YulLiteral",
																		"src": "5192:42:0",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5155:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "5155:3:0"
																},
																"nativeSrc": "5155:80:0",
																"nodeType": "YulFunctionCall",
																"src": "5155:80:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "5142:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "5142:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 138,
														"isOffset": false,
														"isSlot": false,
														"src": "4821:8:0",
														"valueSize": 1
													},
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "4937:14:0",
														"valueSize": 1
													},
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "5142:9:0",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "5056:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 143,
												"nodeType": "InlineAssembly",
												"src": "4724:521:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4445:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "4558:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "4603:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4595:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "4635:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4627:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "4657:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4649:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:86:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "4703:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4695:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4694:19:0"
									},
									"scope": 398,
									"src": "4549:702:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "5500:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 156,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "5545:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "5561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 160,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5575:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5567:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5567:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 155,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															145,
															165
														],
														"referencedDeclaration": 145,
														"src": "5517:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5517:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 163,
												"nodeType": "Return",
												"src": "5510:71:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5257:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "5370:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5415:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5407:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5439:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5397:60:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "5489:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "5481:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5480:19:0"
									},
									"scope": 398,
									"src": "5361:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6094:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 176,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "6134:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 177,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "6150:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6156:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 175,
														"name": "cloneWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															182,
															236
														],
														"referencedDeclaration": 236,
														"src": "6111:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,uint256) returns (address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6111:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 174,
												"id": 180,
												"nodeType": "Return",
												"src": "6104:54:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "5594:384:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create opcode, which should never revert."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "5992:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6023:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6015:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "6052:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6039:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6039:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6014:43:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "6084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6076:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6075:18:0"
									},
									"scope": 398,
									"src": "5983:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "6753:437:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6775:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6767:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6767:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6767:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6781:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "6767:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 199,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "6791:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6767:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "6763:123:0",
												"trueBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "6798:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 206,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "6854:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$398",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6846:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6846:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6846:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6860:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "6846:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 209,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "6869:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 201,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "6819:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6826:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "6819:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6819:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 211,
															"nodeType": "RevertStatement",
															"src": "6812:63:0"
														}
													]
												}
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "6908:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "6895:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 214,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6895:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"arguments": [
														{
															"id": 217,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6947:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "6963:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 216,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "6919:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6919:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6895:73:0"
											},
											{
												"AST": {
													"nativeSrc": "7003:87:0",
													"nodeType": "YulBlock",
													"src": "7003:87:0",
													"statements": [
														{
															"nativeSrc": "7017:63:0",
															"nodeType": "YulAssignment",
															"src": "7017:63:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7036:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "7036:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "7047:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "7047:8:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7057:4:0",
																				"nodeType": "YulLiteral",
																				"src": "7057:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7043:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "7043:3:0"
																		},
																		"nativeSrc": "7043:19:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7043:19:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "7070:8:0",
																				"nodeType": "YulIdentifier",
																				"src": "7070:8:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7064:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "7064:5:0"
																		},
																		"nativeSrc": "7064:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7064:15:0"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "7029:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "7029:6:0"
																},
																"nativeSrc": "7029:51:0",
																"nodeType": "YulFunctionCall",
																"src": "7029:51:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "7017:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "7017:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "7047:8:0",
														"valueSize": 1
													},
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "7070:8:0",
														"valueSize": 1
													},
													{
														"declaration": 192,
														"isOffset": false,
														"isSlot": false,
														"src": "7017:8:0",
														"valueSize": 1
													},
													{
														"declaration": 189,
														"isOffset": false,
														"isSlot": false,
														"src": "7036:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 221,
												"nodeType": "InlineAssembly",
												"src": "6978:112:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 222,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "7103:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7123:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 223,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7115:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7115:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7103:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "IfStatement",
												"src": "7099:85:0",
												"trueBody": {
													"id": 233,
													"nodeType": "Block",
													"src": "7127:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 228,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "7148:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7155:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "7148:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7148:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 232,
															"nodeType": "RevertStatement",
															"src": "7141:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6171:421:0",
										"text": " @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneWithImmutableArgs",
									"nameLocation": "6606:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "6646:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6638:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "6683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6670:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6705:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6628:88:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "6743:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6735:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6734:18:0"
									},
									"scope": 398,
									"src": "6597:593:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "7934:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 249,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "7987:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 250,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "8003:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 251,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "8009:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8015:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 248,
														"name": "cloneDeterministicWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															256,
															285
														],
														"referencedDeclaration": 285,
														"src": "7951:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,uint256) returns (address)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7951:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 247,
												"id": 254,
												"nodeType": "Return",
												"src": "7944:73:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "7196:565:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n at the same address."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "7775:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "7828:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7820:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7820:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "7865:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7852:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7852:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "7887:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7879:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7810:87:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "7924:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "7916:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7915:18:0"
									},
									"scope": 398,
									"src": "7766:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "8681:144:0",
										"statements": [
											{
												"assignments": [
													271
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "8704:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "8691:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 270,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8691:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"id": 273,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "8743:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "8759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 272,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "8715:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8715:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8691:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "8796:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 280,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "8803:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 281,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "8809:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 277,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8789:6:0",
														"memberName": "deploy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 462,
														"src": "8781:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (uint256,bytes32,bytes memory) returns (address)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8781:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 269,
												"id": 283,
												"nodeType": "Return",
												"src": "8774:44:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "8030:455:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n but with a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministicWithImmutableArgs",
									"nameLocation": "8499:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "8552:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8544:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "8589:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8576:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8576:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "8611:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8603:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:110:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "8671:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "8663:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8662:18:0"
									},
									"scope": 398,
									"src": "8490:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "9161:166:0",
										"statements": [
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "bytecode",
														"nameLocation": "9184:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "9171:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 299,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9171:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 302,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "9223:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "9239:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 301,
														"name": "_cloneCodeWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "9195:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory) pure returns (bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9195:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "9284:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 310,
																	"name": "bytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "9300:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 309,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "9290:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9290:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 312,
															"name": "deployer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "9311:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 306,
															"name": "Create2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "9261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Create2_$497_$",
																"typeString": "type(library Create2)"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9269:14:0",
														"memberName": "computeAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 496,
														"src": "9261:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9261:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 298,
												"id": 314,
												"nodeType": "Return",
												"src": "9254:66:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "8831:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "8961:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "9023:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9015:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "9060:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9047:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9047:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "9082:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9074:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "9104:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9096:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9005:113:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "9150:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "9142:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9142:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9141:19:0"
									},
									"scope": 398,
									"src": "8952:375:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "9637:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "9699:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "9715:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 331,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9721:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 334,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9735:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$398",
																		"typeString": "library Clones"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 332,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9727:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9727:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 328,
														"name": "predictDeterministicAddressWithImmutableArgs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															316,
															339
														],
														"referencedDeclaration": 316,
														"src": "9654:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes memory,bytes32,address) pure returns (address)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9654:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 327,
												"id": 337,
												"nodeType": "Return",
												"src": "9647:94:0"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "9333:116:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddressWithImmutableArgs",
									"nameLocation": "9463:44:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "9525:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9517:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "9562:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9549:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 320,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "9584:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9576:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9507:87:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "9626:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9618:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9617:19:0"
									},
									"scope": 398,
									"src": "9454:294:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "10441:246:0",
										"statements": [
											{
												"assignments": [
													348
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10464:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "10451:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 347,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10451:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 351,
																		"name": "instance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "10483:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10492:4:0",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "10483:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10497:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10483:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "3435",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10506:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_45_by_1",
																	"typeString": "int_const 45"
																},
																"value": "45"
															},
															"src": "10483:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10473:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 349,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10477:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10473:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10451:58:0"
											},
											{
												"AST": {
													"nativeSrc": "10577:81:0",
													"nodeType": "YulBlock",
													"src": "10577:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "instance",
																		"nativeSrc": "10603:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "10603:8:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "10617:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "10617:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10625:2:0",
																				"nodeType": "YulLiteral",
																				"src": "10625:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10613:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "10613:3:0"
																		},
																		"nativeSrc": "10613:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10613:15:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10630:2:0",
																		"nodeType": "YulLiteral",
																		"src": "10630:2:0",
																		"type": "",
																		"value": "45"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "10640:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "10640:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10634:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "10634:5:0"
																		},
																		"nativeSrc": "10634:13:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10634:13:0"
																	}
																],
																"functionName": {
																	"name": "extcodecopy",
																	"nativeSrc": "10591:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "10591:11:0"
																},
																"nativeSrc": "10591:57:0",
																"nodeType": "YulFunctionCall",
																"src": "10591:57:0"
															},
															"nativeSrc": "10591:57:0",
															"nodeType": "YulExpressionStatement",
															"src": "10591:57:0"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 342,
														"isOffset": false,
														"isSlot": false,
														"src": "10603:8:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "10617:6:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "10640:6:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 358,
												"nodeType": "InlineAssembly",
												"src": "10552:106:0"
											},
											{
												"expression": {
													"id": 359,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 348,
													"src": "10674:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 346,
												"id": 360,
												"nodeType": "Return",
												"src": "10667:13:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "9754:603:0",
										"text": " @dev Get the immutable args attached to a clone.\n - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n   function will return an empty array.\n - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n   creation.\n - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n   function should only be used to check addresses that are known to be clones."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchCloneArgs",
									"nameLocation": "10371:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "10394:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10386:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10385:18:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "10427:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10427:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10426:14:0"
									},
									"scope": 398,
									"src": "10362:325:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "11476:362:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 372,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11490:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11495:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11490:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3234353331",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11504:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_24531_by_1",
															"typeString": "int_const 24531"
														},
														"value": "24531"
													},
													"src": "11490:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 379,
												"nodeType": "IfStatement",
												"src": "11486:55:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 376,
															"name": "CloneArgumentsTooLong",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "11518:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11518:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 378,
													"nodeType": "RevertStatement",
													"src": "11511:30:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "61",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															"value": "a"
														},
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 385,
																			"name": "args",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "11636:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11641:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "11636:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3435",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11650:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_45_by_1",
																			"typeString": "int_const 45"
																		},
																		"value": "45"
																	},
																	"src": "11636:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11629:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint16_$",
																	"typeString": "type(uint16)"
																},
																"typeName": {
																	"id": 383,
																	"name": "uint16",
																	"nodeType": "ElementaryTypeName",
																	"src": "11629:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11629:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"hexValue": "3d81600a3d39f3363d3d373d3d3d363d73",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11671:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															}
														},
														{
															"id": 391,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "11728:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "5af43d82803e903d91602b57fd5bf3",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11760:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															}
														},
														{
															"id": 393,
															"name": "args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11813:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb",
																"typeString": "literal_string \"a\""
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4",
																"typeString": "literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45",
																"typeString": "literal_string hex\"5af43d82803e903d91602b57fd5bf3\""
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 380,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "11570:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11574:12:0",
														"memberName": "encodePacked",
														"nodeType": "MemberAccess",
														"src": "11570:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11570:261:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 371,
												"id": 395,
												"nodeType": "Return",
												"src": "11551:280:0"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "10693:640:0",
										"text": " @dev Helper that prepares the initcode of the proxy with immutable args.\n An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n abi.encodePacked is more expensive but also more portable and easier to review.\n NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_cloneCodeWithImmutableArgs",
									"nameLocation": "11347:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "11392:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11384:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "args",
												"nameLocation": "11429:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11416:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11416:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11374:65:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "11462:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11462:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11461:14:0"
									},
									"scope": 398,
									"src": "11338:500:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 399,
							"src": "817:11023:0",
							"usedErrors": [
								8
							],
							"usedEvents": []
						}
					],
					"src": "100:11741:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Create2.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
					"exportedSymbols": {
						"Create2": [
							497
						],
						"Errors": [
							519
						]
					},
					"id": 498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 498,
							"sourceUnit": 520,
							"src": "127:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 519,
										"src": "135:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Create2",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "165:367:1",
								"text": " @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."
							},
							"fullyImplemented": true,
							"id": 497,
							"linearizedBaseContracts": [
								497
							],
							"name": "Create2",
							"nameLocation": "541:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "555:50:1",
										"text": " @dev There's no code to deploy."
									},
									"errorSelector": "4ca249dc",
									"id": 406,
									"name": "Create2EmptyBytecode",
									"nameLocation": "616:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:2:1"
									},
									"src": "610:29:1"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "1311:746:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1333:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1325:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1325:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1339:7:1",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1325:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 423,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1349:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1325:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "IfStatement",
												"src": "1321:125:1",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "1357:89:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 430,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1413:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Create2_$497",
																						"typeString": "library Create2"
																					}
																				],
																				"id": 429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1405:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 428,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1405:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1405:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1419:7:1",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1405:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 433,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "1428:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 425,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1378:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1385:19:1",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 507,
																	"src": "1378:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1378:57:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 435,
															"nodeType": "RevertStatement",
															"src": "1371:64:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 438,
															"name": "bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1459:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1468:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1459:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1478:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1459:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 446,
												"nodeType": "IfStatement",
												"src": "1455:80:1",
												"trueBody": {
													"id": 445,
													"nodeType": "Block",
													"src": "1481:54:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 442,
																	"name": "Create2EmptyBytecode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1502:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1502:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 444,
															"nodeType": "RevertStatement",
															"src": "1495:29:1"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1569:392:1",
													"nodeType": "YulBlock",
													"src": "1569:392:1",
													"statements": [
														{
															"nativeSrc": "1583:67:1",
															"nodeType": "YulAssignment",
															"src": "1583:67:1",
															"value": {
																"arguments": [
																	{
																		"name": "amount",
																		"nativeSrc": "1599:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1611:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1611:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1621:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1607:3:1"
																		},
																		"nativeSrc": "1607:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1607:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bytecode",
																				"nativeSrc": "1634:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:8:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1628:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1628:5:1"
																		},
																		"nativeSrc": "1628:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1628:15:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "1645:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:4:1"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "1591:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1591:7:1"
																},
																"nativeSrc": "1591:59:1",
																"nodeType": "YulFunctionCall",
																"src": "1591:59:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "1583:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1583:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1800:151:1",
																"nodeType": "YulBlock",
																"src": "1800:151:1",
																"statements": [
																	{
																		"nativeSrc": "1818:20:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1818:20:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1833:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1833:4:1",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "1827:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1827:5:1"
																			},
																			"nativeSrc": "1827:11:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1827:11:1"
																		},
																		"variables": [
																			{
																				"name": "p",
																				"nativeSrc": "1822:1:1",
																				"nodeType": "YulTypedName",
																				"src": "1822:1:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1870:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1870:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1873:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1876:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1876:14:1"
																					},
																					"nativeSrc": "1876:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1876:16:1"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "1855:14:1",
																				"nodeType": "YulIdentifier",
																				"src": "1855:14:1"
																			},
																			"nativeSrc": "1855:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1855:38:1"
																		},
																		"nativeSrc": "1855:38:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:38:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "1917:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1917:1:1"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1920:14:1",
																						"nodeType": "YulIdentifier",
																						"src": "1920:14:1"
																					},
																					"nativeSrc": "1920:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1920:16:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1910:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1910:6:1"
																			},
																			"nativeSrc": "1910:27:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1910:27:1"
																		},
																		"nativeSrc": "1910:27:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1910:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "addr",
																				"nativeSrc": "1762:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1762:4:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1755:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1755:6:1"
																		},
																		"nativeSrc": "1755:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nativeSrc": "1780:14:1",
																							"nodeType": "YulIdentifier",
																							"src": "1780:14:1"
																						},
																						"nativeSrc": "1780:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1780:16:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1773:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1773:6:1"
																				},
																				"nativeSrc": "1773:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1773:24:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1769:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1769:3:1"
																		},
																		"nativeSrc": "1769:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1769:29:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1751:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1751:3:1"
																},
																"nativeSrc": "1751:48:1",
																"nodeType": "YulFunctionCall",
																"src": "1751:48:1"
															},
															"nativeSrc": "1748:203:1",
															"nodeType": "YulIf",
															"src": "1748:203:1"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1583:4:1",
														"valueSize": 1
													},
													{
														"declaration": 416,
														"isOffset": false,
														"isSlot": false,
														"src": "1762:4:1",
														"valueSize": 1
													},
													{
														"declaration": 409,
														"isOffset": false,
														"isSlot": false,
														"src": "1599:6:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1611:8:1",
														"valueSize": 1
													},
													{
														"declaration": 413,
														"isOffset": false,
														"isSlot": false,
														"src": "1634:8:1",
														"valueSize": 1
													},
													{
														"declaration": 411,
														"isOffset": false,
														"isSlot": false,
														"src": "1645:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 447,
												"nodeType": "InlineAssembly",
												"src": "1544:417:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 448,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "1974:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1990:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 449,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1982:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1982:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1974:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "IfStatement",
												"src": "1970:81:1",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "1994:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 454,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "2015:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$519_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2022:16:1",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 513,
																	"src": "2015:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2015:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 458,
															"nodeType": "RevertStatement",
															"src": "2008:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "645:560:1",
										"text": " @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deploy",
									"nameLocation": "1219:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1234:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1226:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "1250:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1242:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "bytecode",
												"nameLocation": "1269:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1256:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1256:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1225:53:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "1297:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:14:1"
									},
									"scope": 497,
									"src": "1210:847:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2353:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 473,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2385:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 474,
															"name": "bytecodeHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2391:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 477,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2413:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Create2_$497",
																		"typeString": "library Create2"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2405:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2405:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2405:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 472,
														"name": "computeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															482,
															496
														],
														"referencedDeclaration": 496,
														"src": "2370:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes32,address) pure returns (address)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 480,
												"nodeType": "Return",
												"src": "2363:56:1"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2063:193:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2270:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2293:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2285:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2307:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2299:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:36:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2344:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:9:1"
									},
									"scope": 497,
									"src": "2261:165:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2784:1679:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2819:1638:1",
													"nodeType": "YulBlock",
													"src": "2819:1638:1",
													"statements": [
														{
															"nativeSrc": "2833:22:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2833:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2850:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2850:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2844:5:1"
																},
																"nativeSrc": "2844:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2844:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "2837:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2837:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4057:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4057:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4062:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4062:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4053:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4053:3:1"
																		},
																		"nativeSrc": "4053:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4053:14:1"
																	},
																	{
																		"name": "bytecodeHash",
																		"nativeSrc": "4069:12:1",
																		"nodeType": "YulIdentifier",
																		"src": "4069:12:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4046:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:1"
																},
																"nativeSrc": "4046:36:1",
																"nodeType": "YulFunctionCall",
																"src": "4046:36:1"
															},
															"nativeSrc": "4046:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "4046:36:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4106:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4106:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4111:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4102:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:1"
																		},
																		"nativeSrc": "4102:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4102:14:1"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4118:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4118:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4095:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4095:6:1"
																},
																"nativeSrc": "4095:28:1",
																"nodeType": "YulFunctionCall",
																"src": "4095:28:1"
															},
															"nativeSrc": "4095:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "4095:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4143:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4143:3:1"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4148:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4148:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4136:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4136:6:1"
																},
																"nativeSrc": "4136:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4136:21:1"
															},
															"nativeSrc": "4136:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4136:21:1"
														},
														{
															"nativeSrc": "4219:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4219:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4236:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4241:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4241:4:1",
																		"type": "",
																		"value": "0x0b"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4232:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4232:3:1"
																},
																"nativeSrc": "4232:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4232:14:1"
															},
															"variables": [
																{
																	"name": "start",
																	"nativeSrc": "4223:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4223:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4352:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4352:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "mstore8",
																	"nativeSrc": "4337:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4337:7:1"
																},
																"nativeSrc": "4337:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4337:20:1"
															},
															"nativeSrc": "4337:20:1",
															"nodeType": "YulExpressionStatement",
															"src": "4337:20:1"
														},
														{
															"nativeSrc": "4370:77:1",
															"nodeType": "YulAssignment",
															"src": "4370:77:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "start",
																				"nativeSrc": "4392:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4399:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4399:2:1",
																				"type": "",
																				"value": "85"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "4382:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "4382:9:1"
																		},
																		"nativeSrc": "4382:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4382:20:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4404:42:1",
																		"nodeType": "YulLiteral",
																		"src": "4404:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4378:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4378:3:1"
																},
																"nativeSrc": "4378:69:1",
																"nodeType": "YulFunctionCall",
																"src": "4378:69:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nativeSrc": "4370:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4370:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "4370:4:1",
														"valueSize": 1
													},
													{
														"declaration": 487,
														"isOffset": false,
														"isSlot": false,
														"src": "4069:12:1",
														"valueSize": 1
													},
													{
														"declaration": 489,
														"isOffset": false,
														"isSlot": false,
														"src": "4148:8:1",
														"valueSize": 1
													},
													{
														"declaration": 485,
														"isOffset": false,
														"isSlot": false,
														"src": "4118:4:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 494,
												"nodeType": "InlineAssembly",
												"src": "2794:1663:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2432:232:1",
										"text": " @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nameLocation": "2678:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2701:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2693:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "bytecodeHash",
												"nameLocation": "2715:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2707:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "2737:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2729:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:54:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2778:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2770:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:14:1"
									},
									"scope": 497,
									"src": "2669:1794:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 498,
							"src": "533:3932:1",
							"usedErrors": [
								406
							],
							"usedEvents": []
						}
					],
					"src": "101:4365:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							519
						]
					},
					"id": 520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:2",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 519,
							"linearizedBaseContracts": [
								519
							],
							"name": "Errors",
							"nameLocation": "419:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:2",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 507,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "557:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "574:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:2"
									},
									"src": "531:59:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:2",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 510,
									"name": "FailedCall",
									"nameLocation": "696:10:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:2"
									},
									"src": "690:19:2"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:2",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 513,
									"name": "FailedDeployment",
									"nameLocation": "772:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:2"
									},
									"src": "766:25:2"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:2",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 518,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "884:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:2"
									},
									"src": "860:33:2"
								}
							],
							"scope": 520,
							"src": "411:484:2",
							"usedErrors": [
								507,
								510,
								513,
								518
							],
							"usedEvents": []
						}
					],
					"src": "100:796:2"
				},
				"id": 2
			},
			"contracts/KlineFactory.sol": {
				"ast": {
					"absolutePath": "contracts/KlineFactory.sol",
					"exportedSymbols": {
						"Clones": [
							398
						],
						"Create2": [
							497
						],
						"Errors": [
							519
						],
						"KlineFactory": [
							597
						],
						"KlineStorage": [
							701
						]
					},
					"id": 598,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 521,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 598,
							"sourceUnit": 399,
							"src": "61:50:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/KlineStorage.sol",
							"file": "./KlineStorage.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 598,
							"sourceUnit": 702,
							"src": "113:28:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "KlineFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 597,
							"linearizedBaseContracts": [
								597
							],
							"name": "KlineFactory",
							"nameLocation": "154:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5c60da1b",
									"id": 525,
									"mutability": "immutable",
									"name": "implementation",
									"nameLocation": "199:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 597,
									"src": "174:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 524,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "174:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b789003d",
									"id": 530,
									"mutability": "mutable",
									"name": "userContracts",
									"nameLocation": "259:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 597,
									"src": "222:50:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 529,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 526,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "230:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "222:29:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 527,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "241:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 528,
											"nodeType": "ArrayTypeName",
											"src": "241:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2d49c67975aadd2d389580b368cfff5b49965b0bd5da33c144922ce01e7a4d7b",
									"id": 536,
									"name": "ContractCreated",
									"nameLocation": "285:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "317:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "301:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "301:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"indexed": false,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "331:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "323:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:47:3"
									},
									"src": "279:69:3"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "393:51:3",
										"statements": [
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 541,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "404:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 542,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "421:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "404:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "404:32:3"
											}
										]
									},
									"id": 546,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "376:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "368:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:25:3"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "393:0:3"
									},
									"scope": 597,
									"src": "356:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "509:239:3",
										"statements": [
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "clone",
														"nameLocation": "528:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 582,
														"src": "520:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 551,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "520:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"id": 555,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "549:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 553,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "536:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$398_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "543:5:3",
														"memberName": "clone",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "536:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
															"typeString": "function (address) returns (address)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "536:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "520:44:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 562,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "606:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "610:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "606:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 559,
																	"name": "clone",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "588:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 558,
																"name": "KlineStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "575:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_KlineStorage_$701_$",
																	"typeString": "type(contract KlineStorage)"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "575:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_KlineStorage_$701",
																"typeString": "contract KlineStorage"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "595:10:3",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 666,
														"src": "575:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "575:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "575:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "clone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "659:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 566,
																"name": "userContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "628:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 569,
															"indexExpression": {
																"expression": {
																	"id": 567,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "642:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "646:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "642:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "628:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "654:4:3",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "628:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "628:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "628:37:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 575,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "699:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "703:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "699:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "clone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "711:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 574,
														"name": "ContractCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "683:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "EmitStatement",
												"src": "678:39:3"
											},
											{
												"expression": {
													"id": 580,
													"name": "clone",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 552,
													"src": "735:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 550,
												"id": 581,
												"nodeType": "Return",
												"src": "728:12:3"
											}
										]
									},
									"functionSelector": "db6d66c0",
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createKlineStorage",
									"nameLocation": "461:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "479:2:3"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "500:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:9:3"
									},
									"scope": 597,
									"src": "452:296:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "837:45:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 591,
														"name": "userContracts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "855:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 593,
													"indexExpression": {
														"id": 592,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "869:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "855:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 590,
												"id": 594,
												"nodeType": "Return",
												"src": "848:26:3"
											}
										]
									},
									"functionSelector": "34c925f0",
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserContracts",
									"nameLocation": "765:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "790:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "782:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:14:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "819:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 587,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "819:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 588,
													"nodeType": "ArrayTypeName",
													"src": "819:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:18:3"
									},
									"scope": 597,
									"src": "756:126:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 598,
							"src": "145:740:3",
							"usedErrors": [
								507,
								513
							],
							"usedEvents": [
								536
							]
						}
					],
					"src": "33:854:3"
				},
				"id": 3
			},
			"contracts/KlineStorage.sol": {
				"ast": {
					"absolutePath": "contracts/KlineStorage.sol",
					"exportedSymbols": {
						"KlineStorage": [
							701
						]
					},
					"id": 702,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 599,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "KlineStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 701,
							"linearizedBaseContracts": [
								701
							],
							"name": "KlineStorage",
							"nameLocation": "70:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 601,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "105:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 701,
									"src": "90:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 600,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "90:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "KlineStorage.Interval",
									"id": 610,
									"members": [
										{
											"id": 602,
											"name": "MIN1",
											"nameLocation": "144:4:4",
											"nodeType": "EnumValue",
											"src": "144:4:4"
										},
										{
											"id": 603,
											"name": "MIN5",
											"nameLocation": "150:4:4",
											"nodeType": "EnumValue",
											"src": "150:4:4"
										},
										{
											"id": 604,
											"name": "MIN15",
											"nameLocation": "156:5:4",
											"nodeType": "EnumValue",
											"src": "156:5:4"
										},
										{
											"id": 605,
											"name": "MIN30",
											"nameLocation": "163:5:4",
											"nodeType": "EnumValue",
											"src": "163:5:4"
										},
										{
											"id": 606,
											"name": "HOUR1",
											"nameLocation": "170:5:4",
											"nodeType": "EnumValue",
											"src": "170:5:4"
										},
										{
											"id": 607,
											"name": "HOUR4",
											"nameLocation": "177:5:4",
											"nodeType": "EnumValue",
											"src": "177:5:4"
										},
										{
											"id": 608,
											"name": "HOUR12",
											"nameLocation": "184:6:4",
											"nodeType": "EnumValue",
											"src": "184:6:4"
										},
										{
											"id": 609,
											"name": "DAY1",
											"nameLocation": "192:4:4",
											"nodeType": "EnumValue",
											"src": "192:4:4"
										}
									],
									"name": "Interval",
									"nameLocation": "124:8:4",
									"nodeType": "EnumDefinition",
									"src": "119:84:4"
								},
								{
									"canonicalName": "KlineStorage.Candle",
									"id": 625,
									"members": [
										{
											"constant": false,
											"id": 612,
											"mutability": "mutable",
											"name": "openTime",
											"nameLocation": "244:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 625,
											"src": "236:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 611,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "236:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 614,
											"mutability": "mutable",
											"name": "open",
											"nameLocation": "271:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 625,
											"src": "263:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 613,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "263:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 616,
											"mutability": "mutable",
											"name": "high",
											"nameLocation": "294:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 625,
											"src": "286:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 615,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "286:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 618,
											"mutability": "mutable",
											"name": "low",
											"nameLocation": "317:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 625,
											"src": "309:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 617,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "309:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 620,
											"mutability": "mutable",
											"name": "close",
											"nameLocation": "339:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 625,
											"src": "331:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 619,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "331:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 622,
											"mutability": "mutable",
											"name": "volume",
											"nameLocation": "363:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 625,
											"src": "355:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 621,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "355:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 624,
											"mutability": "mutable",
											"name": "isClosed",
											"nameLocation": "385:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 625,
											"src": "380:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 623,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "380:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Candle",
									"nameLocation": "218:6:4",
									"nodeType": "StructDefinition",
									"scope": 701,
									"src": "211:190:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "317650ac",
									"id": 632,
									"mutability": "mutable",
									"name": "candles",
									"nameLocation": "446:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 701,
									"src": "409:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_Interval_$610_$_t_array$_t_struct$_Candle_$625_storage_$dyn_storage_$",
										"typeString": "mapping(enum KlineStorage.Interval => struct KlineStorage.Candle[])"
									},
									"typeName": {
										"id": 631,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 627,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 626,
												"name": "Interval",
												"nameLocations": [
													"417:8:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 610,
												"src": "417:8:4"
											},
											"referencedDeclaration": 610,
											"src": "417:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Interval_$610",
												"typeString": "enum KlineStorage.Interval"
											}
										},
										"nodeType": "Mapping",
										"src": "409:29:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_Interval_$610_$_t_array$_t_struct$_Candle_$625_storage_$dyn_storage_$",
											"typeString": "mapping(enum KlineStorage.Interval => struct KlineStorage.Candle[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 629,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 628,
													"name": "Candle",
													"nameLocations": [
														"429:6:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 625,
													"src": "429:6:4"
												},
												"referencedDeclaration": 625,
												"src": "429:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Candle_$625_storage_ptr",
													"typeString": "struct KlineStorage.Candle"
												}
											},
											"id": 630,
											"nodeType": "ArrayTypeName",
											"src": "429:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Candle_$625_storage_$dyn_storage_ptr",
												"typeString": "struct KlineStorage.Candle[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "158ef93e",
									"id": 634,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "474:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 701,
									"src": "462:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 633,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "462:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "515:72:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 637,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "534:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "538:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "534:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 639,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "548:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "534:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "555:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "526:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "526:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "526:41:4"
											},
											{
												"id": 644,
												"nodeType": "PlaceholderStatement",
												"src": "578:1:4"
											}
										]
									},
									"id": 646,
									"name": "onlyOwner",
									"nameLocation": "503:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:4"
									},
									"src": "494:93:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "640:117:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "659:12:4",
															"subExpression": {
																"id": 652,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "660:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e697469616c697a6564",
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "673:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															},
															"value": "Already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															}
														],
														"id": 651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "651:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "651:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "651:44:4"
											},
											{
												"expression": {
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 657,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "706:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 658,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "714:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "706:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "706:14:4"
											},
											{
												"expression": {
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 661,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "731:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "745:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "731:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "731:18:4"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "604:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "623:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "615:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:16:4"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "640:0:4"
									},
									"scope": 701,
									"src": "595:162:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "844:49:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 681,
															"name": "candle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "878:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Candle_$625_memory_ptr",
																"typeString": "struct KlineStorage.Candle memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Candle_$625_memory_ptr",
																"typeString": "struct KlineStorage.Candle memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 677,
																"name": "candles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "855:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_Interval_$610_$_t_array$_t_struct$_Candle_$625_storage_$dyn_storage_$",
																	"typeString": "mapping(enum KlineStorage.Interval => struct KlineStorage.Candle storage ref[] storage ref)"
																}
															},
															"id": 679,
															"indexExpression": {
																"id": 678,
																"name": "interval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "863:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Interval_$610",
																	"typeString": "enum KlineStorage.Interval"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "855:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Candle_$625_storage_$dyn_storage",
																"typeString": "struct KlineStorage.Candle storage ref[] storage ref"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "873:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "855:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candle_$625_storage_$dyn_storage_ptr_$_t_struct$_Candle_$625_storage_$returns$__$attached_to$_t_array$_t_struct$_Candle_$625_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct KlineStorage.Candle storage ref[] storage pointer,struct KlineStorage.Candle storage ref)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "855:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "855:30:4"
											}
										]
									},
									"functionSelector": "2dd1afc5",
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 675,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 674,
												"name": "onlyOwner",
												"nameLocations": [
													"834:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 646,
												"src": "834:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "834:9:4"
										}
									],
									"name": "addCandle",
									"nameLocation": "774:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "interval",
												"nameLocation": "793:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "784:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Interval_$610",
													"typeString": "enum KlineStorage.Interval"
												},
												"typeName": {
													"id": 668,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 667,
														"name": "Interval",
														"nameLocations": [
															"784:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 610,
														"src": "784:8:4"
													},
													"referencedDeclaration": 610,
													"src": "784:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Interval_$610",
														"typeString": "enum KlineStorage.Interval"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "candle",
												"nameLocation": "817:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "803:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Candle_$625_memory_ptr",
													"typeString": "struct KlineStorage.Candle"
												},
												"typeName": {
													"id": 671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 670,
														"name": "Candle",
														"nameLocations": [
															"803:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 625,
														"src": "803:6:4"
													},
													"referencedDeclaration": 625,
													"src": "803:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Candle_$625_storage_ptr",
														"typeString": "struct KlineStorage.Candle"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:41:4"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "844:0:4"
									},
									"scope": 701,
									"src": "765:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "980:43:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 695,
														"name": "candles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "998:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_Interval_$610_$_t_array$_t_struct$_Candle_$625_storage_$dyn_storage_$",
															"typeString": "mapping(enum KlineStorage.Interval => struct KlineStorage.Candle storage ref[] storage ref)"
														}
													},
													"id": 697,
													"indexExpression": {
														"id": 696,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "1006:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Interval_$610",
															"typeString": "enum KlineStorage.Interval"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "998:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Candle_$625_storage_$dyn_storage",
														"typeString": "struct KlineStorage.Candle storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 694,
												"id": 698,
												"nodeType": "Return",
												"src": "991:24:4"
											}
										]
									},
									"functionSelector": "d0198d2f",
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCandles",
									"nameLocation": "910:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "interval",
												"nameLocation": "930:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "921:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Interval_$610",
													"typeString": "enum KlineStorage.Interval"
												},
												"typeName": {
													"id": 687,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 686,
														"name": "Interval",
														"nameLocations": [
															"921:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 610,
														"src": "921:8:4"
													},
													"referencedDeclaration": 610,
													"src": "921:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Interval_$610",
														"typeString": "enum KlineStorage.Interval"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:19:4"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "963:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Candle_$625_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct KlineStorage.Candle[]"
												},
												"typeName": {
													"baseType": {
														"id": 691,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 690,
															"name": "Candle",
															"nameLocations": [
																"963:6:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 625,
															"src": "963:6:4"
														},
														"referencedDeclaration": 625,
														"src": "963:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Candle_$625_storage_ptr",
															"typeString": "struct KlineStorage.Candle"
														}
													},
													"id": 692,
													"nodeType": "ArrayTypeName",
													"src": "963:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Candle_$625_storage_$dyn_storage_ptr",
														"typeString": "struct KlineStorage.Candle[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:17:4"
									},
									"scope": 701,
									"src": "901:122:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 702,
							"src": "61:965:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:995:4"
				},
				"id": 4
			}
		}
	}
}